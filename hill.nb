(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    237070,       4794]
NotebookOptionsPosition[    233560,       4725]
NotebookOutlinePosition[    233895,       4740]
CellTagsIndexPosition[    233852,       4737]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Henderson Hasselbach Model", "Subsection",
 CellChangeTimes->{{3.845720563307526*^9, 
  3.84572058052042*^9}},ExpressionUUID->"8545c6b9-be0f-435d-af42-\
135e8337f437"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", 
  RowBox[{"Eliminate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"H", "*", 
         RowBox[{"A", "/", 
          RowBox[{"(", "HA", ")"}]}]}], ")"}], "\[Equal]", "Ka"}], ",", "\n", 
      
      RowBox[{
       RowBox[{"H", "*", "OH"}], "\[Equal]", "Kw"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CA", "\[Equal]", 
       RowBox[{"HA", "+", "A"}]}], ",", "\n", 
      RowBox[{
       RowBox[{"H", "+", "CB", "+", "HA"}], "\[Equal]", 
       RowBox[{"OH", "+", "X"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"X", "\[Equal]", 
       RowBox[{"A", "+", "HA"}]}], ",", "\n", 
      RowBox[{"CB", "\[Equal]", 
       RowBox[{"Vb", "*", 
        RowBox[{"CBinit", "/", 
         RowBox[{"(", 
          RowBox[{"Va", "+", "Vb"}], ")"}]}]}]}], ",", "\n", 
      RowBox[{"CA", "\[Equal]", 
       RowBox[{"Va", "*", 
        RowBox[{"CAinit", "/", 
         RowBox[{"(", 
          RowBox[{"Va", "+", "Vb"}], ")"}]}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"HA", ",", "A", ",", "OH", ",", "CB", ",", "CA", ",", "X"}], 
     "}"}], ",", 
    RowBox[{"InverseFunctions", "\[Rule]", "True"}]}], "]"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.845720250917048*^9, 3.845720252964806*^9}, {
   3.845720461762422*^9, 3.845720462095647*^9}, {3.845722380354115*^9, 
   3.845722440077833*^9}, 3.8457225400286016`*^9},
 CellLabel->
  "In[1571]:=",ExpressionUUID->"c05c230a-354f-460a-9581-1b111986a966"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Kw", "\[Equal]", "0"}], "&&", 
    RowBox[{"H", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"Ka", " ", 
       SuperscriptBox["Va", "2"]}], "+", 
      RowBox[{"Ka", " ", "Va", " ", "Vb"}]}], "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"H", " ", "Ka", " ", "Va"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{"CAinit", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"H", "+", "Ka"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["H", "2"], " ", "Va"}], "-", 
         RowBox[{"Kw", " ", "Va"}], "+", 
         RowBox[{"CBinit", " ", "H", " ", "Vb"}], "+", 
         RowBox[{
          SuperscriptBox["H", "2"], " ", "Vb"}], "-", 
         RowBox[{"Kw", " ", "Vb"}]}], ")"}]}], 
      RowBox[{"H", " ", "Ka", " ", "Va"}]]}], "&&", 
    RowBox[{
     RowBox[{"Va", "+", "Vb"}], "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Ka", "\[Equal]", "0"}], "&&", 
    RowBox[{"Vb", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"H", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"Kw", " ", 
       SuperscriptBox["Va", "2"]}], "+", 
      RowBox[{"Kw", " ", "Va", " ", "Vb"}]}], "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Ka", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"H", " ", "Vb"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{"CBinit", "\[Equal]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["H", "2"], "-", "Kw"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"Va", "+", "Vb"}], ")"}]}], 
       RowBox[{"H", " ", "Vb"}]]}]}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"Kw", " ", 
       SuperscriptBox["Va", "2"]}], "+", 
      RowBox[{"Kw", " ", "Va", " ", "Vb"}]}], "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Va", "\[Equal]", "0"}], "&&", 
    RowBox[{"Kw", "\[Equal]", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"H", "\[Equal]", "0"}], "||", 
      RowBox[{"H", "\[Equal]", 
       RowBox[{"-", "Ka"}]}]}], ")"}], "&&", 
    RowBox[{"Vb", "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Va", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"H", " ", 
      RowBox[{"(", 
       RowBox[{"H", "+", "Ka"}], ")"}]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{"CBinit", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["H", "2"]}], "+", "Kw"}], "H"]}], "&&", 
    RowBox[{"Vb", "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Va", "\[Equal]", "0"}], "&&", 
    RowBox[{"Kw", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"H", "\[Equal]", 
     RowBox[{"-", "Ka"}]}], "&&", 
    RowBox[{"Vb", "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Vb", "\[Equal]", "0"}], "&&", 
    RowBox[{"Ka", "\[Equal]", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"H", "\[Equal]", "0"}], "||", 
      RowBox[{"H", "\[Equal]", 
       RowBox[{"-", 
        SqrtBox["Kw"]}]}], "||", 
      RowBox[{"H", "\[Equal]", 
       SqrtBox["Kw"]}]}], ")"}], "&&", 
    RowBox[{
     RowBox[{"Kw", " ", "Va"}], "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Kw", "\[Equal]", "0"}], "&&", 
    RowBox[{"Ka", "\[Equal]", "0"}], "&&", 
    RowBox[{"Vb", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"H", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      SuperscriptBox["Va", "2"], "+", 
      RowBox[{"Va", " ", "Vb"}]}], "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Kw", "\[Equal]", "0"}], "&&", 
    RowBox[{"Ka", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"H", " ", "Vb"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{"CBinit", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "H"}], " ", "Va"}], "-", 
       RowBox[{"H", " ", "Vb"}]}], "Vb"]}], "&&", 
    RowBox[{
     RowBox[{
      SuperscriptBox["Va", "2"], "+", 
      RowBox[{"Va", " ", "Vb"}]}], "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Vb", "\[Equal]", "0"}], "&&", 
    RowBox[{"Kw", "\[Equal]", "0"}], "&&", 
    RowBox[{"Ka", "\[Equal]", "0"}], "&&", 
    RowBox[{"H", "\[Equal]", "0"}], "&&", 
    RowBox[{"Va", "\[NotEqual]", "0"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.845720253452587*^9, 3.845722440865909*^9, {3.845722541193664*^9, 
   3.845722558398513*^9}},
 CellLabel->
  "Out[1572]=",ExpressionUUID->"89f9d2c3-8d12-4bf6-bcf4-c78e6ef0d172"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"CAinit", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"H", "+", "Ka"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["H", "2"], " ", "Va"}], "-", 
         RowBox[{"Kw", " ", "Va"}], "+", 
         RowBox[{"CBinit", " ", "H", " ", "Vb"}], "+", 
         RowBox[{
          SuperscriptBox["H", "2"], " ", "Vb"}], "-", 
         RowBox[{"Kw", " ", "Vb"}]}], ")"}]}], 
      RowBox[{"H", " ", "Ka", " ", "Va"}]]}], ",", "Vb"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.845720280860097*^9, 3.84572029639327*^9}, 
   3.845722470132001*^9, 3.845722571349926*^9},
 CellLabel->
  "In[1574]:=",ExpressionUUID->"50a3bf3d-cb1d-4b8b-a7e5-dc5141fe2ebf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"Vb", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"H", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"CAinit", " ", "Ka"}], "-", 
           RowBox[{"H", " ", 
            RowBox[{"(", 
             RowBox[{"H", "+", "Ka"}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"H", "+", "Ka"}], ")"}], " ", "Kw"}]}], ")"}], " ", "Va"}], 
     
     RowBox[{
      RowBox[{"(", 
       RowBox[{"H", "+", "Ka"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"H", " ", 
         RowBox[{"(", 
          RowBox[{"CBinit", "+", "H"}], ")"}]}], "-", "Kw"}], ")"}]}]]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.845722552058185*^9, 3.8457225720005608`*^9}},
 CellLabel->
  "Out[1574]=",ExpressionUUID->"e0f76f31-11cd-49dc-9aec-9313d826d061"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pH", "=", 
   RowBox[{"List", "[", 
    RowBox[{
    "4.5", ",", "5", ",", "5.5", ",", "6", ",", "6.5", ",", "7", ",", "7.5", 
     ",", "8", ",", "8.5", ",", "9", ",", "9.5", ",", "10", ",", "10.5", ",", 
     "11", ",", "11.5", ",", "12"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pH", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"4.5", "+", 
      RowBox[{"0.01", "*", "n"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "750"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"pH", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "pH", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Va", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CAinit", "=", "0.004"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CBinit", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ka", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "7.6"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kw", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "14"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vb", "[", "H_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"CAinit", " ", "Ka"}], "-", 
          RowBox[{"H", " ", 
           RowBox[{"(", 
            RowBox[{"H", "+", "Ka"}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"H", "+", "Ka"}], ")"}], " ", "Kw"}]}], ")"}], " ", "Va"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"H", "+", "Ka"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", " ", 
        RowBox[{"(", 
         RowBox[{"CBinit", "+", "H"}], ")"}]}], "-", "Kw"}], ")"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vb16", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", 
     "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", "40", ",", "45", 
     ",", "50", ",", "55", ",", "60", ",", "65", ",", "70", ",", "75", ",", 
     "80", ",", "90", ",", "100", ",", "110", ",", "120", ",", "130", ",", 
     "140", ",", "150", ",", "160", ",", "170", ",", "180", ",", "190", ",", 
     "200", ",", "210", ",", "220"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pH16", "=", 
   RowBox[{"{", 
    RowBox[{
    "4.34", ",", "4.7", ",", "4.83", ",", "5.04", ",", "5.25", ",", "5.4", 
     ",", "5.5", ",", "5.83", ",", "6.13", ",", "6.46", ",", "6.69", ",", 
     "6.83", ",", "6.95", ",", "7.05", ",", "7.14", ",", "7.23", ",", "7.3", 
     ",", "7.36", ",", "7.43", ",", "7.52", ",", "7.61", ",", "7.8", ",", 
     "7.99", ",", "8.15", ",", "8.3", ",", "8.5", ",", "8.74", ",", "9.17", 
     ",", "9.66", ",", "10.24", ",", "10.66", ",", "10.89", ",", "11.06", ",",
      "11.2", ",", "11.3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Vb16", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/", "1000"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Vb16", "]"}]}], "}"}]}], "]"}], ",", 
        "pH16"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{"Hlist", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Exp\>\"", ",", "\"\<HH\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<pKa=7.6\>\""}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.845720248077139*^9, {3.845720338039896*^9, 3.845720537508039*^9}, {
   3.845720590004381*^9, 3.845720642807302*^9}, {3.8457224892387943`*^9, 
   3.8457225278575974`*^9}, 3.845722577891197*^9},
 CellLabel->
  "In[1575]:=",ExpressionUUID->"32798290-18a0-4ca2-8c83-ae5c6801441f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQMx/Ye+asQIOvxZ+fGSb1KA/dkzICAE5SfYB+2Q
a30dKAzlF9hrgjWIOPyqy9pTMrnCHmKKKFS+wX7WTBAQdagWWef+sKoFKi/m
ADZmRx/UPHGo/BR7kKhcq4QDRN9M++uLC2y5rktC1c+zPwx0Xf8hKYc3IGWv
F0L1S0P1L4G6V9qBC6xxub0xGMhAzVtpD/Zev4wDxN1r7CHmyEDNXwdVL+uw
BGTt4g32hSCqQBZq30Z7iDpZB4i6zfZga0XkoPZvgaqXg9q/HWqePNT+nfbf
QM7/Kg+1fw/EvT4KUPv3QcNLAWr/AWh4KULtP2gPsUcRav9hSPiEK0HtPwIN
D2UHSDgdhapXgbrnOFRe1QFCn7D3ALp+3XFVqPtO2suDI0DNASTs/vCUfRoY
qEHdewbqPjUHAMTJ974=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
vu419SHBxWivy34vXlMfBvg/i9QiSw==
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-0.0013822703068229756`, 0.550088573746913}, {0, 12.}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"pKa=7.6\"", TraditionalForm], 
     PlotRange -> {{-0.0013822703068229756`, 0.550088573746913}, {0, 12.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Exp\"", "\"HH\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8457203915525217`*^9, 3.845720457255177*^9}, {
   3.845720501884952*^9, 3.845720538013481*^9}, {3.8457205954968233`*^9, 
   3.845720643223714*^9}, 3.84572250131085*^9, 3.845722582037574*^9},
 CellLabel->
  "Out[1587]=",ExpressionUUID->"f43f7da9-ed96-4e01-b748-8fb1db51bedd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hill Model", "Subsection",
 CellChangeTimes->{{3.845720574948627*^9, 
  3.845720577212603*^9}},ExpressionUUID->"7be4440e-a3d7-4ed4-b44c-\
4227fd261718"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", 
  RowBox[{"Eliminate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"H", "^", "n"}], "*", 
         RowBox[{"A", "/", 
          RowBox[{"(", "HA", ")"}]}]}], ")"}], "\[Equal]", 
       RowBox[{"Ka", "^", "n"}]}], ",", "\n", 
      RowBox[{
       RowBox[{"H", "*", "OH"}], "\[Equal]", "Kw"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CA", "\[Equal]", 
       RowBox[{"HA", "+", "A"}]}], ",", "\n", 
      RowBox[{
       RowBox[{"H", "+", "CB", "+", "HA"}], "\[Equal]", 
       RowBox[{"OH", "+", "X"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"X", "\[Equal]", 
       RowBox[{"A", "+", "HA"}]}], ",", "\n", 
      RowBox[{"CB", "\[Equal]", 
       RowBox[{"Vb", "*", 
        RowBox[{"CBinit", "/", 
         RowBox[{"(", 
          RowBox[{"Va", "+", "Vb"}], ")"}]}]}]}], ",", "\n", 
      RowBox[{"CA", "\[Equal]", 
       RowBox[{"Va", "*", 
        RowBox[{"CAinit", "/", 
         RowBox[{"(", 
          RowBox[{"Va", "+", "Vb"}], ")"}]}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"HA", ",", "A", ",", "OH", ",", "CB", ",", "CA", ",", "X"}], 
     "}"}], ",", 
    RowBox[{"InverseFunctions", "\[Rule]", "True"}]}], "]"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.84572259997705*^9, 3.84572260999697*^9}, 
   3.845722686238759*^9},
 CellLabel->
  "In[1611]:=",ExpressionUUID->"5878d3b5-e21b-481a-97e7-ef13a5b77d75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Ka", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], ">", "0"}], "&&", 
    RowBox[{"H", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Va", "+", "Vb"}], "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Kw", "\[Equal]", "0"}], "&&", 
    RowBox[{"H", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Va", "+", "Vb"}], "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"H", "\[Equal]", "0"}], "&&", 
    RowBox[{"Ka", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Va", "+", "Vb"}], "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Ka", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], ">", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"H", " ", "Vb"}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{"CBinit", "\[Equal]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["H", "2"], "-", "Kw"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"Va", "+", "Vb"}], ")"}]}], 
           RowBox[{"H", " ", "Vb"}]]}]}], "&&", 
        RowBox[{
         RowBox[{"Va", "+", "Vb"}], "\[NotEqual]", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Vb", "\[NotEqual]", "0"}], "&&", 
        RowBox[{"Kw", "\[Equal]", "0"}], "&&", 
        RowBox[{"H", "\[Equal]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Va", "+", "Vb"}], "\[NotEqual]", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Vb", "\[Equal]", "0"}], "&&", 
        RowBox[{"Va", "\[NotEqual]", "0"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"H", "\[Equal]", 
           RowBox[{"-", 
            SqrtBox["Kw"]}]}], "||", 
          RowBox[{"H", "\[Equal]", 
           SqrtBox["Kw"]}]}], ")"}]}], ")"}]}], ")"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Va", "\[Equal]", "0"}], "&&", 
    RowBox[{"Vb", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Element]", 
         TemplateBox[{},
          "Integers"]}], "&&", 
        RowBox[{"H", "\[NotEqual]", "0"}], "&&", 
        RowBox[{"Ka", "\[NotEqual]", "0"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{"Log", "[", "H", "]"}], "-", 
          RowBox[{"Log", "[", "Ka", "]"}]}], "\[NotEqual]", "0"}], "&&", 
        RowBox[{"n", "\[Equal]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
             RowBox[{"C", "[", "1", "]"}]}]}], 
           RowBox[{
            RowBox[{"Log", "[", "H", "]"}], "-", 
            RowBox[{"Log", "[", "Ka", "]"}]}]]}]}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"H", "\[Equal]", "0"}], "&&", 
        RowBox[{"Ka", "\[Equal]", "0"}], "&&", 
        RowBox[{
         RowBox[{"Re", "[", "n", "]"}], ">", "0"}]}], ")"}]}], ")"}]}], ")"}],
   "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Va", "\[Equal]", "0"}], "&&", 
    RowBox[{"H", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"CBinit", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["H", "2"]}], "+", "Kw"}], "H"]}], "&&", 
    RowBox[{"Vb", "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Va", "\[Equal]", "0"}], "&&", 
    RowBox[{"Kw", "\[Equal]", "0"}], "&&", 
    RowBox[{"H", "\[Equal]", "0"}], "&&", 
    RowBox[{"Vb", "\[NotEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"H", " ", 
      SuperscriptBox["Ka", "n"], " ", "Va", " ", 
      RowBox[{"(", 
       RowBox[{"Va", "+", "Vb"}], ")"}]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{"CAinit", "\[Equal]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Ka", 
         RowBox[{"-", "n"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["H", 
             RowBox[{"2", "+", "n"}]]}], " ", "Va"}], "-", 
          RowBox[{
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["Ka", "n"], " ", "Va"}], "+", 
          RowBox[{
           SuperscriptBox["H", "n"], " ", "Kw", " ", "Va"}], "+", 
          RowBox[{
           SuperscriptBox["Ka", "n"], " ", "Kw", " ", "Va"}], "-", 
          RowBox[{"CBinit", " ", 
           SuperscriptBox["H", 
            RowBox[{"1", "+", "n"}]], " ", "Vb"}], "-", 
          RowBox[{
           SuperscriptBox["H", 
            RowBox[{"2", "+", "n"}]], " ", "Vb"}], "-", 
          RowBox[{"CBinit", " ", "H", " ", 
           SuperscriptBox["Ka", "n"], " ", "Vb"}], "-", 
          RowBox[{
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["Ka", "n"], " ", "Vb"}], "+", 
          RowBox[{
           SuperscriptBox["H", "n"], " ", "Kw", " ", "Vb"}], "+", 
          RowBox[{
           SuperscriptBox["Ka", "n"], " ", "Kw", " ", "Vb"}]}], ")"}]}], 
       RowBox[{"H", " ", "Va"}]]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.8456396938539877`*^9, {3.845722607820589*^9, 3.845722616630519*^9}, 
   3.8457226522710114`*^9, 3.845722690398122*^9},
 CellLabel->
  "Out[1612]=",ExpressionUUID->"03b0fcdf-4b1b-4edf-8e4f-e322c40c81ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"CAinit", "\[Equal]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["Ka", 
        RowBox[{"-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["H", 
            RowBox[{"2", "+", "n"}]]}], " ", "Va"}], "-", 
         RowBox[{
          SuperscriptBox["H", "2"], " ", 
          SuperscriptBox["Ka", "n"], " ", "Va"}], "+", 
         RowBox[{
          SuperscriptBox["H", "n"], " ", "Kw", " ", "Va"}], "+", 
         RowBox[{
          SuperscriptBox["Ka", "n"], " ", "Kw", " ", "Va"}], "-", 
         RowBox[{"CBinit", " ", 
          SuperscriptBox["H", 
           RowBox[{"1", "+", "n"}]], " ", "Vb"}], "-", 
         RowBox[{
          SuperscriptBox["H", 
           RowBox[{"2", "+", "n"}]], " ", "Vb"}], "-", 
         RowBox[{"CBinit", " ", "H", " ", 
          SuperscriptBox["Ka", "n"], " ", "Vb"}], "-", 
         RowBox[{
          SuperscriptBox["H", "2"], " ", 
          SuperscriptBox["Ka", "n"], " ", "Vb"}], "+", 
         RowBox[{
          SuperscriptBox["H", "n"], " ", "Kw", " ", "Vb"}], "+", 
         RowBox[{
          SuperscriptBox["Ka", "n"], " ", "Kw", " ", "Vb"}]}], ")"}]}], 
      RowBox[{"H", " ", "Va"}]]}]}], ",", "Vb"}], "]"}]], "Input",
 CellChangeTimes->{{3.845722662427794*^9, 3.845722662444503*^9}, 
   3.84572269766121*^9},
 CellLabel->
  "In[1613]:=",ExpressionUUID->"316f3fcf-93b4-4b4b-b604-0896c6a4b7ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"Vb", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["H", 
          RowBox[{"2", "+", "n"}]], "-", 
         RowBox[{"CAinit", " ", "H", " ", 
          SuperscriptBox["Ka", "n"]}], "+", 
         RowBox[{
          SuperscriptBox["H", "2"], " ", 
          SuperscriptBox["Ka", "n"]}], "-", 
         RowBox[{
          SuperscriptBox["H", "n"], " ", "Kw"}], "-", 
         RowBox[{
          SuperscriptBox["Ka", "n"], " ", "Kw"}]}], ")"}], " ", "Va"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["H", "n"], "+", 
         SuperscriptBox["Ka", "n"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CBinit", " ", "H"}], "+", 
         SuperscriptBox["H", "2"], "-", "Kw"}], ")"}]}]]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8457226632590933`*^9, 3.845722701338645*^9},
 CellLabel->
  "Out[1613]=",ExpressionUUID->"3864e2b6-e3e8-4977-8ae4-0f5d8ddd2445"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pH", "=", 
   RowBox[{"List", "[", 
    RowBox[{
    "4.5", ",", "5", ",", "5.5", ",", "6", ",", "6.5", ",", "7", ",", "7.5", 
     ",", "8", ",", "8.5", ",", "9", ",", "9.5", ",", "10", ",", "10.5", ",", 
     "11", ",", "11.5", ",", "12"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pH", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"4.5", "+", 
      RowBox[{"0.01", "*", "n"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "750"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"pH", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "pH", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Va", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CAinit", "=", "0.004"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CBinit", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ka", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "7.6"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kw", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "14"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"n", "=", "0.63"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vb", "[", "H_", "]"}], ":=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["H", 
         RowBox[{"2", "+", "n"}]], "-", 
        RowBox[{"CAinit", " ", "H", " ", 
         SuperscriptBox["Ka", "n"]}], "+", 
        RowBox[{
         SuperscriptBox["H", "2"], " ", 
         SuperscriptBox["Ka", "n"]}], "-", 
        RowBox[{
         SuperscriptBox["H", "n"], " ", "Kw"}], "-", 
        RowBox[{
         SuperscriptBox["Ka", "n"], " ", "Kw"}]}], ")"}], " ", "Va"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["H", "n"], "+", 
        SuperscriptBox["Ka", "n"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"CBinit", " ", "H"}], "+", 
        SuperscriptBox["H", "2"], "-", "Kw"}], ")"}]}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vb16", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", 
     "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", "40", ",", "45", 
     ",", "50", ",", "55", ",", "60", ",", "65", ",", "70", ",", "75", ",", 
     "80", ",", "90", ",", "100", ",", "110", ",", "120", ",", "130", ",", 
     "140", ",", "150", ",", "160", ",", "170", ",", "180", ",", "190", ",", 
     "200", ",", "210", ",", "220"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pH16", "=", 
   RowBox[{"{", 
    RowBox[{
    "4.34", ",", "4.7", ",", "4.83", ",", "5.04", ",", "5.25", ",", "5.4", 
     ",", "5.5", ",", "5.83", ",", "6.13", ",", "6.46", ",", "6.69", ",", 
     "6.83", ",", "6.95", ",", "7.05", ",", "7.14", ",", "7.23", ",", "7.3", 
     ",", "7.36", ",", "7.43", ",", "7.52", ",", "7.61", ",", "7.8", ",", 
     "7.99", ",", "8.15", ",", "8.3", ",", "8.5", ",", "8.74", ",", "9.17", 
     ",", "9.66", ",", "10.24", ",", "10.66", ",", "10.89", ",", "11.06", ",",
      "11.2", ",", "11.3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Vb16", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/", "1000"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Vb16", "]"}]}], "}"}]}], "]"}], ",", 
        "pH16"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{"Hlist", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Exp\>\"", ",", "\"\<Hill\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<pKa=7.6,q=0.63\>\""}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8457206997684526`*^9, 3.845720727152479*^9}, {
   3.845722670202278*^9, 3.845722676219613*^9}, 3.8457227064453363`*^9},
 CellLabel->
  "In[1614]:=",ExpressionUUID->"4cae8f8a-8c01-494c-849d-d7e1cc98ffbf"],

Cell[BoxData["0.63`"], "Output",
 CellChangeTimes->{{3.8457207133020887`*^9, 3.845720727878923*^9}, {
  3.8457226784438066`*^9, 3.845722706965679*^9}},
 CellLabel->
  "Out[1623]=",ExpressionUUID->"23def10a-718c-49a2-a918-bbf3305f6ce6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQMx/Ye+asQIOvxZ+fGSb1KA/dkzICAE5SfYB+2Q
a30dKAzlF9hrgjWIOPyqy9pTMrnCHmKKKFS+wX7WTBAQdagWWef+sKoFKi/m
ADZmRx/UPHGo/BR7kKhcq4QDRN9M++uLC2y5rktC1c+zPwx0Xf8hKYc3IGWv
F0L1S0P1L4G6V9qBC6xxub0xGMhAzVtpD/Zev4wDxN1r7CHmyEDNXwdVL+uw
BGTt4g32hSCqQBZq30Z7iDpZB4i6zfZga0XkoPZvgaqXg9q/HWqePNT+nfbf
QM7/Kg+1fw/EvT4KUPv3QcNLAWr/AWh4KULtP2gPsUcRav9hSPiEK0HtPwIN
D2UHSDgdhapXgbrnOFRe1QFCn7D3ALp+3XFVqPtO2suDI0DNASTs/vCUfRoY
qEHdewbqPjUHAMTJ974=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJwt13dcze0fx/FstzurOqPT6eyh7C3hvI2EiOxNIqNEUWmgoSIyKkUSSihl
VFTSrtM5TYUGlahkb24Ufuenz/ePevQ433Od67qe1+uck3DDjoWbumppab3T
/Pj/7yFJyz+fPD9T0acmZufkPjr4z+Phlt3VsxR618yfuuvp4LObzxePfywU
fL/XVmk8HTz88Nzhqck8hdHqY3lfB+ng0LSZHbWb5ytG/7108KxW/k+JeoFi
8t8BdWCaW5sV22ilmKUZ7Zq5DlR9VcknPy1ULEzjaUbUwb4XOxOTeyxW/B1u
tQ6Gf6+RsNlLFLZ/Lx1o1/JmPzZaqnD8O6AObhf36cowXabw+DtBHZz4su9T
vcVyxd/p+emg3uaV+5zVKxR/hzumA/Nh8Rm77VcqIk7//9LBx7Z14U6eqxQX
d/5/QB1YpE26tfLIasXf5V7T3D93qu/0yDWKv9NL08GONqcJ0xPWKvL/P1ye
Dqbd61Gz4+46RVnp/y8drLk6JXyH7XrF3+2r0UFKdZPD/XfrFX+X+1QHg1+c
NHZwtVa8+f/0XuvAsna6/RytDYpv/x/uqw5mOfjnOB3aoND6e+ki+fWlcx91
bMhDF9XGxxwqI23IQxefzdP2c+UbyUMXjW/19BpubiQPXUxZ+98qw8mbyEMX
fhafXdtUm8hDF9fPZLiZLbElD108H9SxceozW/LQRdvJ4SNad2wmD104zXYs
nPh7M3nowjXWotvcoC3koQurIz6ZIsOt5KGLNPNHmarEreShiy9PHxWYK7aR
hy7OdjseGFe5jTx0wbE1y/5vox15aOb3WqE96Ycdeejiit0uPa+j9uShi/3T
xjqXSbaThy4Kk18rh97dTh662D7kztn4xQ7koYufjsaB8945kIcu7pZU6QsO
7SAPXfBOd7w+qbOTPHSxQ6Uvn2y9kzz0IAz28Qm8sZM89CD3mpTno+VIHnoY
1bI63tjKkTz0ILBa9Mc/2pE8NM9PHeUf+cWRPPTwVfqj+05zJ8WUvwPqId2k
elrPM07koYdp43b23vjeiTz0oP1ALjg6Yxd56MEyb+XSQxG7yEMP059edFv5
cRd56EF/vGBVz9m7yUMPudEx5Scu7CYPPXS31LrapX03eejh+tPJxSuXOJOH
Hvh7H/4TfcOZPDTr2/V6Tr22C3no4XhZgFO/bS7koYew8LKtk1Uu5KGH8I8j
eA5yV/LQg+/bq96xAa7koYdLYz4FvnjhSh56WOoaM3aSxR7y0ENmrKdP7LU9
5KGH3Z8CXI103ciDgRlnLQRle9zIgwGm/39BJ5+4kQcDqf4nagLM3cmDAVmw
gBN3w508GFhzqnrPb44HeTAwb4iJYZC/B3kw4Phq1viVnz3IgwF21OVf26w9
yYOBlaLMxIJ7nuTBwI2OR4ftp+4lDwbE19Y2b07eSx4MZKdW9bwr20ceDLyd
32+Bw5l95MFAaf4iwYGB+8mDAWOf7U1dD+0nDwYOtG7U+q7lRR4MLPEq9hw0
xYs8GFg2Z2ssw9OLPBiInDlxSt4dL/Jg4ET5hP4jf3qRBwMmrfYtGyd6kwcD
V8u/BK338CYPBla87Nsky/QmDwa+F3KT7/zxJg8GQj1SmnnTfciDieFjzi5c
GuBDHkyYvK9rsSn1IQ8mnF0Sfefo+JIHE3HeUdy+K3zJgwm7nh4Xrp33JQ8m
jl1f2XvUS1/yYKKf23mLiFEHyIOJevv2ra88D5AHE9M8bW2lqgPkwQSc5LMs
9fzIg4mGn6WcLdZ+5MHEjzuD3zlf9yMPJvjOK6vdf/uRh+b54xJfu1n6K47/
9WDCwf/6HJdz/uTBxOzThnq7PvqTBxNj3Ortd80IIA8m3g/6uNf9VAB5MPHr
tsvuw28DFH+Hy2Oi25QQ77jpB8mDiQlldo9qIg6SBxP+Y1hp+p8PkgcTWdeO
LXOae4g8mJi5KeZHy6VD5MHENVXzs91dA8mDBUFayCrpukDyYGHdrtDrP+4G
kgcL7VZWw74aHCYPFiZNjDc28DxMHixMvV//06HhMHmwsNTe/vtnxRHyYCEj
tLdXYswR8mAhZq3Tx6jeQeTBwgvz9ddLHILIgwXr/PX88dVB5MHCpTUZcS1T
jpIHC7dcF6TXXDlKHiz8DHbN0NU7Rh4sFA2q50d6HSMPFkx7r1i++90x8mBB
brD1TcWw4+TBQtNF/38Hbj5OHixs5s8w+3PuOHmwkLdWvjSy7jh5sFD93Lb9
pe4J8mDh5Y+qTy8tT5AHC8vrMn+eDTxBHixMGNdc2avoBHmw4FphOd6oezB5
sFBlOu1Vt2nB5MGGVoN+/GmvYPJgY9PPEePeZAeTBxuWXQrn/foTTB5sxL2o
uV6OEPJg48ntgQYbfELIg41y+YV56QUh5MHGVEeDHtW9QsmDjXbJqt/pFqHk
wcaaYWu/2h4PJQ82Kl6JYhsfhpIHG3mrDhSJuCfJg41RjgzGWJuT5MHGSPv2
GayrJ8mDDYflRdoln0+SBxtmkZaChZPDyIMNu3M+I68FhJEHG7YB5h+aqsLI
g40Zfeb0ecMLJw82ji97YFxpF04ebHxkRf88kR5OHmz88k3mj+h9ijzYkIbw
JycuO0UebLhMb/3U58op8mBjf3tGw5wfp8iDjUm9m8McLE6Thz4yxn9Ido06
TR76cAo5q9z86TR56CPBNGw1zCPIQx9q22l/up6NIA99mAQEj775OYI89HE6
Qu021+IMeegjIHbmvOqYM+Shj6/r5kkW/DpDHvoYzCjfkbEskjz00e/ukDP6
yZHkoY/+c3tp2/c/Sx76GLKoXZhif5Y89HGiatu4z8VnyUMfjbaINDaOIg99
xOQmnVsVGEUe+njq3ss/4HUUeejjt2JJ0PV558hDH0Gbzd48uHGOPPSxec+r
LZ59zpOHPkZ7BI7qN/k8eejjwzznDYKd58lDH2sVbb7JMefJQx92dYWGqprz
5KGPW0b7k9ZqXyAPzXrqXmS7Tr1AHhwoWPxsXdcL5MHBjzU2ktGJF8iDg+56
7Wurmy+QBwd9dPrV/eJEkwcHkoF+/8UtjCYPDp71eqH/ODCaPDh47TEp4kR+
NHlwNJ93zaVlHdHkwUFFoJvW8XEx5MGBb/rNvbU7Y8iDg59m4wMuX41R/N2+
nRxouwSu+PU8hjw4eLfvifEj0UXy4MBt8i/jKesukgcHL9hcX6PIi+TBwUB2
4ZLIuovkwcHaETezwlix5MFBQvWVKvbSWPLgoLbO5pzoZCx5cDD62NbBKQ9i
yYODfis+OpfpXSIPDn4fy3dxWHJJ8eyvBwdV1RxeeNgl8uAg4pnfYvPaS+TB
gTJL/XMf5zJ5GCA6rODl5DWXycMAP7StPvmev0weBrhvbNywoOUyeRhg+ruK
bRcHXSEPzf0+9ov2bb+iGPPXwwD5Q+7MbEy6Qh4GMH338nX+9yvkYYBxXwKf
DlPEkYcBllY4ZfL848jDACZ+l7RDyuLIwwBzfGYsOsyIJw8DODjv0O61Np48
NPPjTYzvcTmePAxgaBB60v9DPHkYwDd5/LBDE6+ShwHO3z1VrO13lTwMMOTI
g9QB966ShwFS+sWYhBokkIcBXvaYHRi2OYE8DDBrz+FHzJQE8jBA84qLVnpd
EsnDANauE/oetUwkDwPw4i2FvpGJ5GGA3Wtnnfr0KpE8DHDD6bHTY5Nr5MFF
tkvfK5MOXSMPLnYvGiFl1F0jDy4s1zeV2RhdJw8uBO+6ecrdr5MHF/vnlf5Z
W3KdPLj4Zlx/7EC/G+TBhWLi3LnB42+QBxfTxMX9atffIA8uUp6xhywJvEEe
XMzsPvxL75Qb5MGF3z3TpE8NN8iDi8TZiQkDe98kDy56/Bgn3TTqJnlwEXa0
bvmb1TfJg4vni17vvxRwkzy48NglLA9OukkeXNgyIpxuNNwkDy6KrdrCf/dO
Ig8u3H5wNnqOSSIPLnqNvf990Pok8uCi9Yf5rm5HksiDix1LVrzpk5ZEHlx8
ORK1Z0pLEnlwMUvHZdDZAcnkwQXPgtlbNjmZPAyx0fgcv3ZrMnkYwv30kF1J
YcnkYYig6y+7puQnk4chHqdISh5/SCYPzf3vbQoG8VLIwxAh4zyaT1ukkIch
kmdH6w9zSyEPQ8x/cXhxy6UU8jDE7Et792U8SCEPQ5S6bdmX1PUWeRhi3O8u
E1QjbpGHId5vbjzcvvYWeRjisuTwMougW+RhiHXieOfbGbfIwxAPsvpmmb66
RR6GiDJ72OMR+zZ5GELACeQfN79NHoao3Tj58WqX2+RhCOGiSz0VsbfJwxBL
67F97IPb5GGIHz23107plkoehgi/fLT/ylGp5GEIr+ChtX7WqeRhiGoT5rec
46nkYYgzN9wH98lJJQ8evv+rZ7L+fSp58DDMYEZjLi+NPHjou2N83VDLNPLg
YVRcr7bovWnkwUPkv435/MQ08uChAszBMfVp5MFD8GLrmsHa6eTBQ+nDFz5p
punkwUMvfac2c7t08uCBHeqdVRuRTh48RM/Zl7u1OJ08eNg9/WHcjx/p5MHD
xd/ckQFGd8iDh6yWCQMHrrhDHjzILnl2Dzt4hzx4SPOtKNRLu0MePJxzrRhw
pO0OefCwcPyXCz+ZGeTBw4SeSePWzcwgDx5CrSKD0pwzyIOHy30P2vaIzSAP
HqpKE31mPMggDx4KDpZc3N3tLnnwkMGceSJ01F3y4MFSMadfjPVd8uAjwelt
c9Txu+TBR7SOZb1/9l3y4INtkZy/4t1d8uCj0ilhC9Mwkzz4+P12eGSGRSZ5
8PHscPrIWe6Z5MGH8cotf+5cySQPPjzbDBp1ajLJg48/74/HWfbIIg8+Zjvs
xfbRWeTBh8e/CQe2W2eRBx9nXjJXWR7LIg8+tud3SeiXmUUefOxYo2uT+CqL
PPhYP91hhxE7mzz4qChX5XubZZMHH+5OB5becsomD83f5gXC/HPZ5MHHoVof
cXxpNnlo1jfo8pqtP7LJg49yN+3Xf3RyyIMP5YBtFuOMcsiDD7f0X0uXKXLI
g4+ioV/DNizJIQ8+zvaKCVtml0MeAqga/ZvHeud0rqeHAC9+Le77KyyHfAT4
lvgrNiEhp3N9/QX4w0qZOiMvh7wEmJH5xSW/JqdzvfoCsP0ONxq9zSE/AUys
T+u6ds3tXL9YgDUHTyfHs3LJUwBXc9u1BUNyO/djmACCbZNv50/Npe9rAiRP
LFh3ZWlu5/5MECCO829XJ7tc8hZAknJ8psArt3O/pgkQVDijLik0l/wFaAkI
3GIUl9u5f3MF2HFzYqxvZi6dBwE2MGKn5Vbmdu7nMgHGPTvx7WlrLp0PAW7v
n+bW+iO38/urtQDb+jn5lfTNo/MiQNWhJbUhwrzO/bYToO+xMyOnjM2j7+cC
nFXbLSqelde5/84C9Ott23XC6jw6TwKM/3m+R8COvE4PLwH0zlyRpfrk0fkS
QDTLc6TqZF6nR6AAEw8e+ZJ+JY/Om8bPNw1HMvI6PUI1PiMsXk4pz6PzJ8DS
sd/zK5vyOj2iBFi2v/bKjM95dB4F2BRh6xTeI7/T44oADVnuv9SsfDqfArSf
n2lUb5Tf6ZEsQJiWVU2ZaT6dVwHGdOx8HTUvv9MjU4DzRmqL+evy6fwKcNol
r6lxZ36nR5EAIfd7npznk0/nWYCNVz2WnAnJ7/SoFCDXaNJA1cV8Ot8CzFsU
kn7/Vn6nR70Ayz9+nZqlzKf/JwTIXtRxLqAmv9PjuWZ9r1eVDH+RT+dfcz6y
mzJvf8/v9PggQFGW7S7uPwXUg+b+L1Uv1+sXdHr81Kw3XFt4wKiA+hDibq9v
HH+TAupDiD2xmx7bzi6gPoRwOsvbIltRQH0IcSpcrSrYUkB9CFG55G3PaXsK
qA8hpFPbhkYFFFAfQsx+0TynLqyA+hBijGON/efYAupDCBMtl4tvUgqoDyHG
Mod0L8wvoD6EMHrBPO9ZVUB9CPH9ZkeQ7tMC6kNzf0+z1kPvC6gPIboZfsx6
8quA+hDCXRw6lqFdSH0IURdkscmYU0h9CJG7PdWOP6iQ+tCst/zT5i9jC6kP
IWLZR9zjphd2vv9Yax7fv7dwilUh9SGE7h6pfcraQupDiPzJipA+9oX0/iqE
tc3j9VPdCqkPIfi7l3cs9y+kPoTIvrjqqFVIIfUhxOEwNQafL6Q+hDg6NHvK
84RC6kOI/9wDU3zSC6kPIXiZMRVaykLqQ4jNLpey1lcVUh9CRJ+ZczO6sZD6
ECL+8Zpa5atC6kMIpVbmprJvhdSHEO32847c7qqkPoSYm/Rtv08/ZefnUbJm
feaRziM5SupDiAmrWTH5UiX1IYRd0QiFyUgl9SHETc4Z7+BJSupDiIOVb6Ir
zJXUhxADYiLqPyxUUh9CdHz5uOXbGiX1IUT5Tl3fpi1K6kOIaxlvba/vUtLn
gRDVVhOsbPYpqQ8huvo77O84qKQ+hBDHFg/3CFF2enwQwlUx9cKTs0rqQ4ii
ME9d4ytK6kOIX6NqlSuTlNSHCJWRqzsc7yqpDxECFBlfdyiV1IcIWY5zvi6+
p6Q+RHgc22WK8JGS+hBhe56z7sNmJfUhQk70w/Sdb5XUhwhfsp87f/mmpD5E
YHbrGrReq4j60PydM8Ds1j9F1IcIlo8OtXzSKaLvByIc0NmRpM8toj5EaNw3
55uRtIj60MxvyJDv4mFF1IcIvd9e1uo9voj6ECFqzv3l1Yoi6kOE+1enzzk2
q4j6EGFtlDZ/tFUR9SGCtWWWMG9FEfUhwtVBG89O2lBEfYgw8IpvQ/S2IupD
BBdLg2FfnYqoDxHGqi88Hu1RRH1o9mdqj9HrfIuoDxG0a+O9XQ8XUR8i9LF0
YOwNKaI+REipvTBp55ki6kOEeaJ+M61iiqgPEYa6fvISXC2iPkRw4veY3JhU
RH1o/Fp3FQfeKaI+RDiobnGT5RVRHyJkP3WJvKkuoj40+7sl33dIJXlcEWHW
f43e4bXkcU2EU+9Xvvz0hDySRYgfaN5X0UYeaSIYTB091fMdeWSKUOc6si7+
K3nkiXCkrcaopIM8ikS4OHv6wYZuKupDhJ1r9ec866OiPkRwOHO4sG6givoQ
4UPvlVYFbBX1IUL5/OoZ0XwV9SHC82/P/9slU1EfIiys7JNvMlRFfYjAPbv6
z+fRKupDBKv7YT1jJqqoDxGWxbFGm09VUR+a8zej9UmTuYr6ECOfl7Rlp6WK
+hBjwIWnRt8Wq6gPMX68OeLltEpFfYjxqT6guNVaRX2IcWe8re2CLSrqQ4zt
bO/kJAcV9SGG8EjHwL7OKupDjGGbyp6t81BRH2J0McsOuOqtoj7EeFnvbvMh
QEV9iJFle6Ru2FEV9SHG5yXbLDeHqqgPMY5N9ZRHRKioDzE29BaVFJ1XUR9i
+AzPOP/hEnnMFcPV89oARiJ5WIkRXuJ4YGwyeSwTY7c42HZhOnmsFsO7512R
fTZ5WGue361A6ltIHrZilPtdbwgvIQ87MYzaMtPjK8ljpxiX8xyN79aQh7MY
Uw5HXChtIA93MTbZrg2ubyYPL836LGY4vnlJHn6a17efktLxnjwCxYh8klLV
9xt5HNN4RBw3E3SQR6gYTckzA8Z0VVMfYtx406xr0VtNfWjGP8reurGfmvrQ
jB86o6e3npr6EMNOcMD+AkdNfYiROPsuTylQUx9i9DS5cuG9TE19iJF+5rkH
b6ia+hDjqX2vcYtGq6kPMRisiJVHTdTUhxhDP5i63FOoqQ8xWAMvszgz1dSH
GCGHcyvs5qqpDzEK/iSMVC5UUx9iVIZUVxmtUFMfmvnP72URvk5NfYjRt3H3
mP62aupDjM1pVYOD7dXUhxhz7tjcE+xSUx9iQKJdkOGmpj7EmN9341UbLzX1
IcHFmcVD9QPU1IcE9cmuX+uD1NSHBD6ckOvXQ9XUhwQRdmbawWfU1IcEbw+V
Zx2IJg99CXoej9h7MI48eBI8PrWsa9QN8hBLwOin3UeZSh6DJFi6f+iSLtnk
MUyCnT3SLi9QksdoCVhjZ6pTyshjggROF438hj0kj8kStPY8EJ9VTx7TJPj4
bL22bQt5mEtwt7XCW/qGPOZKwKz90/rrM3lYSdDDZCX7Qzt5LJMgxftcR0e3
YupDguGs7h5S7WLqQ4KOt/O8tukVUx8S8Fo+/SrlFlMfEnx7OP7VPGkx9SFB
otMCvBtaTH1oHn+wX+v6uGLqQwKjVpMRJxTF1IcEZw+ZPTo5q5j6kCA4/km/
LKti6kOCcf2fNPdZVUx9SFDCrtu9d2Mx9SHBog3mzUyHYupDgurZ15bWuhZT
HxK82FrQkeddTH1IMOafM//UHi6mPiS45V+Uyg4rpj40fqqgWf7ni6kPCa7c
/re76Gox9SHB8dxNJm9vFVMfEhgHfJnyMqeY+tDMJ3iXE6u0mPqQ4P20kSZu
NcXUhwSBLQqtAc3F1IcEzu2XJzW8K6Y+JHhz74zds5/kUS9B6MwEHWGvEupD
Avz8nR2hW0J9aO7P8+tjJSihPiQYcnx8sNnQEupDs/+35mi5TyyhPiTocm1n
rw/mJdSHBKkrdDfGLSmhPqTwKw+pv2xTQn1IoU4NnPrWsYT6kGLsij4OHl4l
1IcU6yY/M198rIT6kEIR2ZLtFlVCfUhx3m9o1dvEEupDith6O/+kzBLqQ4qw
EUM+qMtKqA8pBntLh49rLKE+pPBpD9jx410J9SHF9qx5rxhapdSHFDkpQa1B
A0upDylsQ++l2IhLqQ8pHulsST89tpT6kOL9GtWGUbNKqQ8ptF43DxuxqpT6
kOJywqH4kw6l1IcU3rmFjpt8SqkPKUZemzEiOqyU+pAibmz6BcurpdSHFOea
ZwRvzymlPqRoX93c2KW6lPqQYsKRWud+b0qpD816s4TLwrqWUR9SdC16GRqp
X0Z9SFFkprVYMrKM+pCinLe4dMTsMupDiv/MHGcXWpdRH1Ls+dRlcKt7GfUh
RePSRa0hoWXUhxQx3xu6PLxWRn1Isb6gkp+gLqM+pDjVHvuF21pGfUix2iBx
7uAu5dSHFF8fJfz72LCc+tCcDxv3oSNMy6kPKW62RCiHrSinPqTYGvOi+2PX
cupDioKbk0aYhJdTH1KssDO8Oi+1nPqQYmOL42dubTn1IYWz48SYqz/KqQ/N
+dpl6fjboIL6kOL3Cf4ojqKC+pBiWJhPbTebCupDCvt++1xyAiqoD818P/Gm
LEmsoD6keOu2yKfofgX1IUXpotJUbnsF9aEZb+qniYkD71EfMuzorjKdLrtH
fciQVj3IcpHpPepDhqQekbubFtyjPmT4wflY8Nb2HvUhQzVLuWXf3nvUhwxr
MgdGnQy9R33IYNQzKXVcwj3qQ4bab78NNxXcoz5keP/Ger6k4R71IQP35Mcm
12/3qA8Ztifr7LcZUEl9yGD2yvDdK+NK6kPz+ol9/tWZWUl9yLDiJL+03rqS
+pBhtemVqfP3VVIfMqie3QjbfqaS+pAhnKkaOCm9kvqQQWufkpFdU0l9aB4X
nBW1f6ukPmRIWG5c/YVZRX3IcPwW4+2N8VXUhwyJA5Knj1lRRX3IMJD3ttrX
o4r60OxfzvjCi1FV1IcMEbsC50fmVVEfMszVsXm0o62K+pDBZV3lO0nf+9SH
DH1OHzbNHX2f+pBhm6d22JxV96kPGZI5Ge1K3/vUhwzMZ9yQSYn3qQ+N5yyd
xJs196kPGVYF8JRDuj2gPmRwe3QnIGX4A+pDhpj8W+r5ax5QHzIEl0aF9Djy
gPqQIWyRgteQ8YD6kKHxreBhw5sH1IcMp74Jl/fnP6Q+ZGhuYe91W/iQ+pBh
SP8AK0nAQ+pDhij/VVx25kPqQwbtXOW6NV8eUh8yBFXwH3cMqaY+ZJC+enzk
j2019SGDruR0ikN0NfUhA186+eGiJ9XUhwzX7g9KTTOsoT5k6N7sve3ymhrq
Q4Z5FiGzjc/VUB9yuN8xa7d4VkN9yJHJu+nMktdSH3KUuqm0Tm2vpT7kKJwk
NKm7VUt9yHFif41O259a6kOO787H68ss6qgPOQZGRU6LOF1HfcjRf7TpwhUv
66gPOdYGau1lmz6iPuTozrKObD36iPqQo+HFhq/lLY+oDzkCI1wnNU96TH3I
kZfudXpk+GPqQ45fj7QS1J8fUx9yGMR4HMtYWE99yOE3qVcTK6We+pBjWenA
7PesBupDDpO4NbWL9zVQH3IUTx6/eUVbA/Uhx6HrbaYDFjVSH3L4ntyceyS3
kfqQo2bikm7No55QH3JYDBqVIr/8hPqQ4/fHr/oT+jdRH3JMGbDSYuvcJupD
juotzOpRh5uoDzm4ri6+50uaqA852veM9Mnq+5T6kOOdWdC201ZPqQ+N5/lb
06aEP6U+5HjGsPC90/iU+pAjN30IlzvoGfUhx1J4uTnuekZ9yFFr2nFQnfOM
+pAjzmdP9ugBzdSHHKHaal6OdTP1IcfI1jbT/beaqQ85moS7zHz+baE+5LAZ
fKDPY5sW6kMOcc/nXSKzWqgPzf23b1jVGrRSH3IoLRfUxHi0Uh9ypF79PVy3
sZX60JzH/am5ptOfUx9yiIquFYy++pz6kGOH88J5Osw26kMOTkXT0ve+bdSH
HKzLZ8ubv7RRH3LYet0898/WF9SH5vX2ZmV7NL2gPgbhf8LWFeg=
         
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.5293092164724573}, {0, 12.}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"pKa=7.6,q=0.63\"", TraditionalForm], 
     PlotRange -> {{0, 0.5293092164724573}, {0, 12.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Exp\"", "\"Hill\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8457207133020887`*^9, 3.845720727878923*^9}, {
  3.8457226784438066`*^9, 3.845722707024465*^9}},
 CellLabel->
  "Out[1627]=",ExpressionUUID->"36c57d0d-c587-454f-a3cb-1291ed522c00"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.845642204784473*^9},ExpressionUUID->"fa3cc69f-641c-4b9c-8027-\
62c8a66f9f74"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", 
  RowBox[{"Eliminate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"H", "*", 
         RowBox[{"A", "/", 
          RowBox[{"(", "HA", ")"}]}]}], ")"}], "\[Equal]", 
       RowBox[{"Ka", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "apl"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"HA", "/", "CA"}], ")"}]}], "]"}]}]}], ",", "\n", 
      RowBox[{
       RowBox[{"H", "*", "OH"}], "\[Equal]", "Kw"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CA", "\[Equal]", 
       RowBox[{"HA", "+", "A"}]}], ",", "\n", 
      RowBox[{
       RowBox[{"H", "+", "B", "+", "HA"}], "\[Equal]", 
       RowBox[{"OH", "+", "X"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"X", "\[Equal]", 
       RowBox[{"A", "+", "HA"}]}], ",", "\n", 
      RowBox[{"B", "\[Equal]", 
       RowBox[{"Vb", "*", 
        RowBox[{"Binit", "/", 
         RowBox[{"(", 
          RowBox[{"Va", "+", "Vb"}], ")"}]}]}]}], ",", "\n", 
      RowBox[{"CA", "\[Equal]", 
       RowBox[{"Va", "*", 
        RowBox[{"Ainit", "/", 
         RowBox[{"(", 
          RowBox[{"Va", "+", "Vb"}], ")"}]}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"HA", ",", "A", ",", "OH", ",", "B", ",", "CA", ",", "X"}], 
     "}"}], ",", 
    RowBox[{"InverseFunctions", "\[Rule]", "True"}]}], "]"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.8456422203936367`*^9, 3.845642222777525*^9}, {
   3.845642255297187*^9, 3.845642349626479*^9}, {3.845642406951509*^9, 
   3.845642446507152*^9}, {3.845642507349362*^9, 3.845642522187263*^9}, {
   3.8456425933238773`*^9, 3.845642612242304*^9}, 3.8456427035918493`*^9, {
   3.8456427674471493`*^9, 3.845642890761848*^9}, {3.845643089194504*^9, 
   3.845643089918543*^9}, {3.845643337826326*^9, 3.845643342215871*^9}, {
   3.845643374909999*^9, 3.845643379941661*^9}, {3.845643518942679*^9, 
   3.8456435270325193`*^9}, {3.845643557341762*^9, 3.845643567411847*^9}, {
   3.845643707473337*^9, 3.845643734443956*^9}, {3.845644119492825*^9, 
   3.845644120507401*^9}, {3.8456442354059563`*^9, 3.845644261944139*^9}, {
   3.845644460428954*^9, 3.845644461517289*^9}, {3.8456484742285624`*^9, 
   3.845648475096827*^9}, {3.8456486435826387`*^9, 3.845648674880332*^9}, 
   3.845719053773264*^9, {3.8457193617672663`*^9, 3.845719361837441*^9}, {
   3.845719653210293*^9, 3.84571966793612*^9}, 3.8457199473846607`*^9},
 CellLabel->
  "In[1628]:=",ExpressionUUID->"2fd99eca-34fe-45bd-b9d5-b7ea4817e6c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ainit", " ", "H", " ", "Va", " ", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["H", "2"], " ", "Va"}], "-", 
         RowBox[{"Kw", " ", "Va"}], "+", 
         RowBox[{"Binit", " ", "H", " ", "Vb"}], "+", 
         RowBox[{
          SuperscriptBox["H", "2"], " ", "Vb"}], "-", 
         RowBox[{"Kw", " ", "Vb"}]}], ")"}]}], 
      RowBox[{"Ka", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Ainit", " ", "H", " ", "Va"}], "-", 
         RowBox[{
          SuperscriptBox["H", "2"], " ", "Va"}], "+", 
         RowBox[{"Kw", " ", "Va"}], "-", 
         RowBox[{"Binit", " ", "H", " ", "Vb"}], "-", 
         RowBox[{
          SuperscriptBox["H", "2"], " ", "Vb"}], "+", 
         RowBox[{"Kw", " ", "Vb"}]}], ")"}]}]], "]"}]}], "\[NotEqual]", "0"}],
   "&&", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Va", "+", "Vb"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ainit", " ", "H", " ", "Va"}], "-", 
      RowBox[{
       SuperscriptBox["H", "2"], " ", "Va"}], "+", 
      RowBox[{"Kw", " ", "Va"}], "-", 
      RowBox[{"Binit", " ", "H", " ", "Vb"}], "-", 
      RowBox[{
       SuperscriptBox["H", "2"], " ", "Vb"}], "+", 
      RowBox[{"Kw", " ", "Vb"}]}], ")"}]}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{"apl", "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"Ainit", " ", "H", " ", "Va"}], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", "Va"}], "+", 
     RowBox[{"Kw", " ", "Va"}], "-", 
     RowBox[{"Binit", " ", "H", " ", "Vb"}], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", "Vb"}], "+", 
     RowBox[{"Kw", " ", "Vb"}]}], 
    RowBox[{"Ainit", " ", "H", " ", "Va", " ", 
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{"H", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["H", "2"], " ", "Va"}], "-", 
          RowBox[{"Kw", " ", "Va"}], "+", 
          RowBox[{"Binit", " ", "H", " ", "Vb"}], "+", 
          RowBox[{
           SuperscriptBox["H", "2"], " ", "Vb"}], "-", 
          RowBox[{"Kw", " ", "Vb"}]}], ")"}]}], 
       RowBox[{"Ka", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ainit", " ", "H", " ", "Va"}], "-", 
          RowBox[{
           SuperscriptBox["H", "2"], " ", "Va"}], "+", 
          RowBox[{"Kw", " ", "Va"}], "-", 
          RowBox[{"Binit", " ", "H", " ", "Vb"}], "-", 
          RowBox[{
           SuperscriptBox["H", "2"], " ", "Vb"}], "+", 
          RowBox[{"Kw", " ", "Vb"}]}], ")"}]}]], "]"}]}]]}]}]], "Output",
 CellChangeTimes->{
  3.845642367157433*^9, 3.845642522883885*^9, {3.845642594603737*^9, 
   3.8456426089863787`*^9}, 3.845642639223772*^9, 3.845642704712199*^9, 
   3.8456427679684067`*^9, {3.845642805399732*^9, 3.845642882035675*^9}, 
   3.845642931099399*^9, 3.8456430115998983`*^9, 3.845643130569952*^9, 
   3.845643343001548*^9, {3.8456435031826057`*^9, 3.845643565466848*^9}, {
   3.845643710384107*^9, 3.8456437569418983`*^9}, {3.845644233330307*^9, 
   3.845644262349872*^9}, 3.845644462053355*^9, 3.845648476724271*^9, 
   3.845648523799142*^9, {3.845648645772957*^9, 3.845648675283552*^9}, 
   3.8457169729791193`*^9, 3.845719055120973*^9, 3.845719362795987*^9, {
   3.84571965417787*^9, 3.845719673506406*^9}, 3.845719948024761*^9, 
   3.845720766969892*^9, 3.8457240850618277`*^9},
 CellLabel->
  "Out[1629]=",ExpressionUUID->"456f427d-9860-45e2-ad40-1493912c0eab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
This equation cannot be solved with current Mathematica method\
\>", "Subsubsection",
 CellChangeTimes->{{3.845720781472775*^9, 
  3.8457208004374638`*^9}},ExpressionUUID->"68ad4da9-1674-4d3e-b2dd-\
72509bc75685"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"apl", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{"Ainit", " ", "H", " ", "Va"}], "-", 
       RowBox[{
        SuperscriptBox["H", "2"], " ", "Va"}], "+", 
       RowBox[{"Kw", " ", "Va"}], "-", 
       RowBox[{"Binit", " ", "H", " ", "Vb"}], "-", 
       RowBox[{
        SuperscriptBox["H", "2"], " ", "Vb"}], "+", 
       RowBox[{"Kw", " ", "Vb"}]}], 
      RowBox[{"Ainit", " ", "H", " ", "Va", " ", 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{"H", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["H", "2"], " ", "Va"}], "-", 
            RowBox[{"Kw", " ", "Va"}], "+", 
            RowBox[{"Binit", " ", "H", " ", "Vb"}], "+", 
            RowBox[{
             SuperscriptBox["H", "2"], " ", "Vb"}], "-", 
            RowBox[{"Kw", " ", "Vb"}]}], ")"}]}], 
         RowBox[{"Ka", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Ainit", " ", "H", " ", "Va"}], "-", 
            RowBox[{
             SuperscriptBox["H", "2"], " ", "Va"}], "+", 
            RowBox[{"Kw", " ", "Va"}], "-", 
            RowBox[{"Binit", " ", "H", " ", "Vb"}], "-", 
            RowBox[{
             SuperscriptBox["H", "2"], " ", "Vb"}], "+", 
            RowBox[{"Kw", " ", "Vb"}]}], ")"}]}]], "]"}]}]]}], ",", "Vb"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.845642382604898*^9, 3.8456423829172697`*^9}, {
   3.845642657933736*^9, 3.8456426594189997`*^9}, {3.845642712926519*^9, 
   3.845642713786099*^9}, {3.845642773510297*^9, 3.845642773571248*^9}, {
   3.845642818630652*^9, 3.8456428387874813`*^9}, {3.8456428858491573`*^9, 
   3.845642885924139*^9}, {3.845642936719018*^9, 3.84564293698158*^9}, {
   3.845643017495736*^9, 3.845643026135441*^9}, {3.8456431134844522`*^9, 
   3.8456431135798817`*^9}, {3.845643355113296*^9, 3.8456433553664722`*^9}, {
   3.845643741764697*^9, 3.845643759367045*^9}, {3.845644267037616*^9, 
   3.845644267300641*^9}, 3.845644384894804*^9, {3.845644470072405*^9, 
   3.845644473581461*^9}, {3.845719066679228*^9, 3.845719069857288*^9}, 
   3.8457193785842237`*^9, {3.845719684656033*^9, 3.8457196870017776`*^9}, {
   3.845720808419973*^9, 3.845720813857401*^9}, {3.845724081601385*^9, 
   3.845724082121056*^9}, {3.84572413581494*^9, 
   3.8457241363931713`*^9}},ExpressionUUID->"d51ae4fc-d3b2-4a87-8b1d-\
dbb8a21757b6"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.845642383623892*^9, 3.8456426600755453`*^9, 3.84564271443302*^9, 
   3.845642774229856*^9, {3.845642819505496*^9, 3.845642843283135*^9}, 
   3.845642886394457*^9, 3.845642969047701*^9, {3.845643018882958*^9, 
   3.8456430335451517`*^9}, 3.845643132421268*^9, 3.8456435031302233`*^9, 
   3.845644102650793*^9, 3.845644351094017*^9, 3.845644457344474*^9, 
   3.845644602988038*^9, 3.8457190732384872`*^9, 3.845719384240093*^9, 
   3.845719692619864*^9, 3.8457241333896914`*^9},
 CellLabel->
  "Out[1630]=",ExpressionUUID->"75649649-e805-4c14-b70e-8ce83c738113"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Make an approximation, get ride of Vb terms in numerator (Vb<<Va)\
\>", "Subsubsection",
 CellChangeTimes->{{3.8457208202132177`*^9, 
  3.845720841349599*^9}},ExpressionUUID->"43bce6a9-04d7-4fbb-b923-\
1b7d04fe0225"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"apl", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{"Ainit", " ", "H", " ", "Va"}], "-", 
       RowBox[{
        SuperscriptBox["H", "2"], " ", "Va"}], "+", 
       RowBox[{"Kw", " ", "Va"}]}], 
      RowBox[{"Ainit", " ", "H", " ", "Va", " ", 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{"H", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["H", "2"], " ", "Va"}], "-", 
            RowBox[{"Kw", " ", "Va"}], "+", 
            RowBox[{"Binit", " ", "H", " ", "Vb"}], "+", 
            RowBox[{
             SuperscriptBox["H", "2"], " ", "Vb"}], "-", 
            RowBox[{"Kw", " ", "Vb"}]}], ")"}]}], 
         RowBox[{"Ka", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Ainit", " ", "H", " ", "Va"}], "-", 
            RowBox[{
             SuperscriptBox["H", "2"], " ", "Va"}], "+", 
            RowBox[{"Kw", " ", "Va"}], "-", 
            RowBox[{"Binit", " ", "H", " ", "Vb"}], "-", 
            RowBox[{
             SuperscriptBox["H", "2"], " ", "Vb"}], "+", 
            RowBox[{"Kw", " ", "Vb"}]}], ")"}]}]], "]"}]}]]}], ",", "Vb"}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8456446160463753`*^9, {3.84564551088995*^9, 3.84564552684993*^9}, 
   3.845645561101715*^9, {3.845648490838002*^9, 3.845648495546262*^9}, {
   3.845648685246737*^9, 3.845648696393355*^9}, {3.845719076779354*^9, 
   3.845719082361288*^9}, {3.845719387535759*^9, 3.845719406943372*^9}, {
   3.8457197001531677`*^9, 3.845719735021141*^9}, {3.84571995815082*^9, 
   3.8457199892604847`*^9}, 3.84572077460737*^9, {3.845720846164466*^9, 
   3.845720846289484*^9}},
 CellLabel->
  "In[1458]:=",ExpressionUUID->"1ca44dd9-adf3-4272-b48d-1014e6773201"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"Vb", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"H", " ", 
           RowBox[{"(", 
            RowBox[{"Ainit", "-", "H", "-", 
             FractionBox["Ainit", 
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Ainit", "-", "H"}], ")"}], " ", "H"}], "+", 
                    "Kw"}], 
                   RowBox[{"Ainit", " ", "apl", " ", "H"}]]], " ", "Ka"}], 
                "H"]}]]}], ")"}]}], "+", "Kw"}], ")"}], " ", "Va"}], 
       RowBox[{
        RowBox[{"H", " ", 
         RowBox[{"(", 
          RowBox[{"Binit", "+", "H"}], ")"}]}], "-", "Kw"}]], ",", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "<", 
       RowBox[{"Im", "[", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ainit", "-", "H"}], ")"}], " ", "H"}], "+", "Kw"}], 
         RowBox[{"Ainit", " ", "apl", " ", "H"}]], "]"}], "\[LessEqual]", 
       "\[Pi]"}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.845644618190899*^9, 3.845645512567769*^9, {3.84564555819608*^9, 
   3.845645562783331*^9}, 3.84564849691273*^9, 3.8456485505014877`*^9, {
   3.845648693830887*^9, 3.8456486980528812`*^9}, 3.8457190839025707`*^9, {
   3.845719402868032*^9, 3.845719408033306*^9}, 3.845719705870751*^9, 
   3.845719736939376*^9, {3.845719976187196*^9, 3.8457199898134108`*^9}, 
   3.8457208482102537`*^9},
 CellLabel->
  "Out[1459]=",ExpressionUUID->"f7745155-f857-4353-9b7b-235ee2576768"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pH", "=", 
   RowBox[{"List", "[", 
    RowBox[{
    "4.5", ",", "5", ",", "5.5", ",", "6", ",", "6.5", ",", "7", ",", "7.5", 
     ",", "8", ",", "8.5", ",", "9", ",", "9.5", ",", "10", ",", "10.5", ",", 
     "11", ",", "11.5", ",", "12"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pH", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"4.5", "+", 
      RowBox[{"0.01", "*", "n"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "750"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"pH", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "pH", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Va", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ainit", "=", "0.004"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Binit", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ka", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "7.6"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kw", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "14"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vb", "[", 
   RowBox[{"H_", ",", "apl_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"H", " ", 
       RowBox[{"(", 
        RowBox[{"Ainit", "-", "H", "-", 
         FractionBox["Ainit", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ainit", "-", "H"}], ")"}], " ", "H"}], "+", "Kw"}], 
               RowBox[{"Ainit", " ", "apl", " ", "H"}]]], " ", "Ka"}], 
            "H"]}]]}], ")"}]}], "+", "Kw"}], ")"}], " ", "Va"}], 
   RowBox[{
    RowBox[{"H", " ", 
     RowBox[{"(", 
      RowBox[{"Binit", "+", "H"}], ")"}]}], "-", 
    "Kw"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vb16", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", 
     "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", "40", ",", "45", 
     ",", "50", ",", "55", ",", "60", ",", "65", ",", "70", ",", "75", ",", 
     "80", ",", "90", ",", "100", ",", "110", ",", "120", ",", "130", ",", 
     "140", ",", "150", ",", "160", ",", "170", ",", "180", ",", "190", ",", 
     "200", ",", "210", ",", "220"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pH16", "=", 
   RowBox[{"{", 
    RowBox[{
    "4.34", ",", "4.7", ",", "4.83", ",", "5.04", ",", "5.25", ",", "5.4", 
     ",", "5.5", ",", "5.83", ",", "6.13", ",", "6.46", ",", "6.69", ",", 
     "6.83", ",", "6.95", ",", "7.05", ",", "7.14", ",", "7.23", ",", "7.3", 
     ",", "7.36", ",", "7.43", ",", "7.52", ",", "7.61", ",", "7.8", ",", 
     "7.99", ",", "8.15", ",", "8.3", ",", "8.5", ",", "8.74", ",", "9.17", 
     ",", "9.66", ",", "10.24", ",", "10.66", ",", "10.89", ",", "11.06", ",",
      "11.2", ",", "11.3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{
            RowBox[{"Hlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{
            RowBox[{"Hlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "0.5"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{
            RowBox[{"Hlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "0.25"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{
            RowBox[{"Hlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{
            RowBox[{"Hlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "5"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<pKa=7.6\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"aplinit", "=", "0.3"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Vb16", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/", "1000"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Vb16", "]"}]}], "}"}]}], "]"}], ",", 
        "pH16"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{
            RowBox[{"Hlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "aplinit"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{
            RowBox[{"Hlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"1.3", "*", "aplinit"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{
            RowBox[{"Hlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"2", "*", "aplinit"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{
            RowBox[{"Hlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", "0.3"}], ")"}], "*", "aplinit"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vb", "[", 
           RowBox[{
            RowBox[{"Hlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{".7", "*", "aplinit"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "Hlist", "]"}]}], "}"}]}], "]"}], ",", 
        "pH"}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Exp\>\"", ",", "\"\<Electrostatic Model\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<pKa=7.6\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.845644766993511*^9, 3.845644768969874*^9}, {
  3.845647187774665*^9, 3.845647190552369*^9}, {3.845647221538472*^9, 
  3.845647270354623*^9}, {3.84564735284041*^9, 3.845647355579116*^9}, {
  3.8457206765751963`*^9, 3.845720677893942*^9}, {3.845720873233945*^9, 
  3.845720907520829*^9}, {3.845720938356057*^9, 3.845720996091951*^9}},
 CellLabel->
  "In[1531]:=",ExpressionUUID->"2bf14628-754c-4b39-8701-bf54c4852773"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
hxSfvgaODX3STn0Mwf8BzNU1Gw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
6kOKWvvAgfu3llAfUnQ59e3OyUMl1IcUxwtPdewRXEJ9SOF8tNfOL7El1IcU
Y1asDvjnZgn1IYVL/q76dqUl1IcUDh8WaQ1+UkJ9SNGePyTm7qcS6kOKUyFq
r3cdS6kPKQ56/Ltnn1kp9SHFp23ajn4DS6kPKfqP0BnIm1RKfUjBnXDgpaVd
KfUhhWlwZeTtraXUhxQTLh7zqvMppT40879tWL8vqpT60HiF6H25cbOU+pDC
PvnL0L1VpdSHFPVSX/6jt6XUhxSrh7qPq9Ytoz6kWFJ+b9oaYRn1IcWtrxm/
zowpoz6kmDm9rtcO2zLqQ4o3akPVt21l1IcUS9v3aZAGllEfUrgdnH+q/dUy
6kMK0bQmy9CyMupDirw80+bnzWXUhxSS/GML3ncrpz6kGHV+2Ndb/cqpDym6
R/7YOWt2OfWhWf+5XXEJW8qpDykeJdVvqj9ZTn1IIRseU9uQXk59SFEj3qCb
V19OfUghHu4iHqejpj6kWPNeoXPSSE19SJGUXeFkZ6mmPmS42WrZK9xKTX3I
UPYiZvhiGzX1IYOd3rZjQavV1IcMKzwEVrP3qKkPGfwv6a0POKGmPmQ4el5/
nm28mvqQoe+CN+MvZaupDxn0pM8jfOvU1IcM3UzXP2trUVMfMoSFxZ3p9FcF
9SGDn7nANV5SQX3IMCl23qDX1hXUhwznY3bGFi2qoD5k2NmZq5y+vYL6kGGG
bl30ruMV1IcMZw6Il89NqKA+NPMJ/GpVX1xBfciQyr8QwX9TQX3IkNnukhan
cyX1IYO6xvVXRc9K6kOGynPzpsycUkl9yNBFPTY3cF0l9SFD+5BnDjG+ldSH
DOYSl/FeiZXUhwzxjxKixldVUh8yfOj46+mDb5XUhwwbxVOPLDCvoj5kENpN
sE4fX0V9yBCzwb6us3MV9SFDzyl6c2eeqKI+ZPje/nWZb0YV9SHD52WvTxc3
VlEfMjjOzxjQQ7+a+pDB5Z9uw1dZV1MfGt8uLw8UO1dTHzIYR1pwZp6upj5k
cCtR9/+krKY+ZGh1qO+f87Oa+pDheJLPjZw+d6kPGcQZnJDW5XepDxmCaw4+
dA26S31ozo/ziOIxqrvUhwxFB1qezdWuoT5kMHkQ+iR/ZA31IcMGW0VW2NYa
6kOGxWHyO/UJNdSH5v6zz+1Cm2qoDxkkY485VFrWUh8yGGV3eBC8tpb6kGGv
3gqLD/G11IccBf3nVb9qrqU+5Jh0tqL56KB71Iccut0vXXu+8x71Icf+FLub
/2bdoz7kcFr85ceLLnXUhxyZt/++fWFBHfUhR+zlH1dmxNRRH3Jw7FprX36q
oz7k8LqeHn/gn/vUhxzCoRm/e5+6T33IEbpabvjx3X3qQ/P768cjGyY+oD7k
6H+jk7L7uQfUhxwOY8b1Pvz7AfUhxznr1icLlj6kPuQ4DL9DgbcfUh9yjLme
MHSq8BH1IUeghUu4/5FH1Icc85s3f9/24RH1oZlvOzv9bkvrqQ85+q3zne+s
qqc+5LD26FQSPfox9SHH3vW5suLEx9SHHLtb9BzcDZ5QH5r7T61dEj77CfUh
R2u8R+Mi/yfUh2Y91U+K08ufUB9y/J3gP1LV4yn1Icc/x8wKQ+Y/pT7kGK7W
dusf9pT6kKM6baAq/NlT6kOOZvGTC596P6M+NONH+LiPcX1GfciREj1uqFfe
M+pDjoavVpMbDRqoDzkuH76W4uTYQH3Iscf2Vw9uegP1IcfEPYKjPbo/pz40
v18U837Z6ufUhxzD3mamGOY8pz7k6DX4u85EixfUhxyJw/pf1937gvrQzE9l
4OT89AX1Icf1k1wP74mN1Iccg49+Guya0Eh9yOERejRsGucl9SHHAJ3oRP6R
l9SHHNPP69h1/v6S+pBjgvkSP+n6V9SHHNFpdSP8Gl5RHz3xP/e2QuM=
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
d/o/SL5EHlzEonblffFl8uBiCMuizijyMnlw8Wdd89DTjATy4CJgxKFZqw4l
kAcXnat3f3DomEgeXPQu9w6N8kkkD81+08Rbe7YmkocxFq64G5XsnUQexlDk
25bs/JFEHsYQRT8L2LwtmTyMUcPXEQT+TCYPY8QV3J/haJlCHsY4Hp3Z0MMn
hTyM8bv04+kJOSnkYYy8xLK437pXyMMYhuUH24+bcoU8jLGXs/3C70NXyMMY
fj22Oo0tv0IexjhhZ97yWf8qeRhjZHFSrWTxVfIwxvdT6efUZ66Sh+b+BjsS
615cJQ9j8A71HrFywDXyMMaAA2Zrpm+6Rh7GaOyePy/i1jXyMIaR4s2Hqe2v
k4dm/6m+/IXTrpOHMXYXc87fCr5OHsYY/qlu5KZH18lDM88Nfmu3i2+QhzGW
u0wqLnW7QR7GKN/+pNg59QZ5mMC/NL10crub5GGCMeafBPbTb5KHCR7n+HdK
OX6TPEzQzflA4oj6m+RhgmOZE8a86pdKHiYojTqaW+iZSh4mGJjTc0FxVip5
mGj62dryvlsaeZjAy+bV0UG2aeRhAuYWuXBvbBp5mGB4yLoTTW/TyMMEw1Jq
K+0s0snDBPFmlbcr9qWThwm2DFSZTy9PJw8ThE96ZJzNvUUeJpAzRIsHrblF
HiZ4HcirOHL1FnmYYFG1wdqa1lvkYQL9SnfDXlNvk4cJ4lpMCqWht8nDBBP7
Ne4wrrtNHpr9+uaMeW2WQR4mSJvXn3F0cwZ5mOBBwkqejiKDPEzA1b16aFyX
TPIwxbZTyUct52WShyksPq7Z0O50JnmYwiT4iJ9PYyZ5mKIiL3xM6uA75GGK
E3sausZsvUMepmgQXt1vkX2HPEyRsGrkvB1dFORhiskDDvdfPUdBHqZ4VRvz
9H2YgjxMceQ4ezmrXkEepog823OeGzOLPExRImW6hI/MIg9ToMPSw0ftssjD
FEvrOr2YtiOLPEzBjH58oTgqizw063GjuYzsLPIwxReedSD7eRZ5mOKYGo5P
dbPJwxRhQ891cZZmk4cp7ji4tl62ziYPU1QV+hZfds4mD1Mc/9CZ6XQwmzxM
Yda8YMfDi9nkYYoJfKNcXXU2eZhCt/uyK43N2eTBw7SwOP6uLjnkwcO4wHs/
VH1zyIMHc+PJI1TWOeTBw77g8zXeTjnkwYMsvlO7J/tyyIOHryPOl36IzSEP
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
tiEPog==
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
9TEU/web+xni
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"pKa=7.6\"", TraditionalForm],
  PlotRange->{{-0.0013466595837671185`, 0.5429586811344349}, {0, 12.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.845720888639374*^9, 3.8457209079922113`*^9}, 
   3.8457209532030582`*^9, 3.845720997466555*^9},
 CellLabel->
  "Out[1543]=",ExpressionUUID->"e554ceaa-707e-46a3-88c7-11d09b31b8fe"],

Cell[BoxData["0.3`"], "Output",
 CellChangeTimes->{{3.845720888639374*^9, 3.8457209079922113`*^9}, 
   3.8457209532030582`*^9, 3.8457209974713173`*^9},
 CellLabel->
  "Out[1544]=",ExpressionUUID->"90e50f3e-9e28-4d46-9c05-405e8dfb1e22"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQMx/Ye+asQIOvxZ+fGSb1KA/dkzICAE5SfYB+2Q
a30dKAzlF9hrgjWIOPyqy9pTMrnCHmKKKFS+wX7WTBAQdagWWef+sKoFKi/m
ADZmRx/UPHGo/BR7kKhcq4QDRN9M++uLC2y5rktC1c+zPwx0Xf8hKYc3IGWv
F0L1S0P1L4G6V9qBC6xxub0xGMhAzVtpD/Zev4wDxN1r7CHmyEDNXwdVL+uw
BGTt4g32hSCqQBZq30Z7iDpZB4i6zfZga0XkoPZvgaqXg9q/HWqePNT+nfbf
QM7/Kg+1fw/EvT4KUPv3QcNLAWr/AWh4KULtP2gPsUcRav9hSPiEK0HtPwIN
D2UHSDgdhapXgbrnOFRe1QFCn7D3ALp+3XFVqPtO2suDI0DNASTs/vCUfRoY
qEHdewbqPjUHAMTJ974=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw11nc81e//x/H2Xhwch4OzT9rr41Mf6jxbtFCafLRLQyUkGqIhGZHRUImo
aCBlVsoIx0FktIxQaWrRUj79zrff63r/Ubdz835f57qu+/XgLVzlZLO2S6dO
nd6r//nf/2NNMmomtDgo+jyM3Tqxjyb2jVw4u7TveoVWokXjTi1NLNYZ1NNp
+AaFkc/beRmGmuhUsth+is1GhbF9cO6XwZpIaX3+eONOR8XYP5cmzv72s+l3
YZNi4p8BNWEq+PZ0VvVmxQz1aIkWmpgQ7fxiVi8nhU2GoXpETXjpKvxOGG1V
/BnOXhN9S26P0cjaqnD4c2li4WkDboy9s8L5z4CaeLjepNey/5wVu/5MUBN/
OWl0XRLjovgzPR9NFDpqjY6d4ar4M1ywJq4sGvLa5pOr4mTE/y5NaNs1Xd15
epvi3Nb/DaiJj8d9Jo6Y5ab4s9xETWjZi932trsp/kwvQxMRijCnQwnbFXn/
Gy5XEyPKN7kvXu2uKC3536Wez99tfbryPRR/tu+hJpQbftZGPfRQ/FluoyZW
madXTzm2Q/Huf9N7qwnpyEOczkt2Kr7+b7gvmpjrnPr2A3+XotOfi4OIj3pv
JS92kQcHG12UD1Kv7iYPDmIbQq5keHmSBwfPaoNjp9rsIQ8OBrYED9s82Is8
OMi5O+GHtLM3eXBQGj9p808nb/LgIKpk+r7cBm/y4GBxYdSLg/P3kgcHkgG9
Vi1Q7iUP9c+fxD41UewjDw6qtb6u/idjH3lw0KOqUMNx7H7y4MDhezfj6qv7
yYODg1sCe/iMOkAeHDSfbhX7XjtAHhwc9TLjvjLxIQ8Oen7yDE3J8iEPDvqd
8Vz9w/wgeajXIzB1zas4SB4crMp0zDda6UseHOziN7vrf/YlDw7aSjpy8nwO
kYf6+11KW6V8P/Lg4NVZJzfrVD/y0MIPL2mB5Tx/8tCC9q2Nu0Z89CcPLbhP
/ar4HRJAHlqwkcZVlJoEkocWnmos7R5fH0geWjjw4ubNU36HFZP+DKiF00mP
X6f9HUQeWnh//kFoz9dB5KEFl+3LCk9FBpOHFrJNeldkDzlCHlpoaW2JW33o
CHloIXAaxzPr5RHy0EJpjfem6hkh5KGFrlvCw65dDiEPLdh+/z7IflAoeajH
bz3S9fH2UPLQQrpivt+op6HkoV5vkN7tDTPDyEMLdtJ1NwJSw8hDC3/na4ZG
isPJQwtpYV9tLoSFk4f6+ef7uiZ0P0oeWrh8d8bZjB1HyUML/41xMyr/cJQ8
tFD2eeLa9nXHyEMbnp8UcyY1HSMPbbybUHYmZtlx8tCG7u7xOiPqjpOHNlaP
a1vycukJ8tDGdr/i71UNJ8hDG7W/3m/tWBtBHtoo5v4Wr2uJIA9t6E/vaafr
fpI8tPGa4ziJ2/UUeWjj7ZCCug0hp8hDG+1md8Q6otPkoQ3+snuPhKmnyUMb
VuJvUaGzIslDGzWd3ds2N0WShzaWbFsvz9x9hjy0sWbbv0t38KLIQxvK188C
rmdEkYc2PtoHm5oMjyYPbQzUO754gVc0eWhjos1D87SKaPLQxpzPIbxl8rPk
oY1XG0blWnqeJQ9t2Fe3cXyrzpKHNtx4F3P6Do8hD23Y7pxjX3cwhjx0kIbs
eR2NMeShg8Du295umhRLHjpwNde0HH46ljx0UPN6uKviZyx56ODuqk+jz/17
jjx0cHRI+Vj7rHPkoYPEOabf1wnOk4cOUpW2FYUHzpOHDlaE5b/c9eY8eejg
ZnerkQfmXSAPHUwIznZqyLxAHjpI2pcx6Yg4jjx0cLtu++/QoDjy0EH569zG
l+1xiiN/PHSQfrqq4fD6ePLQgSJqZu7+h/HkoYPJz6TaSouL5KEe/1rDKNvM
i+Shgzcir3F/Dbuk+DNcrg66PbjV3S76EnnowKR16tx87cvkoYOrE78c2BZ4
mTx00DBs8uM13a6Qhw5+NYeah3leIQ8d5H0v9fv17Qp5cLEg6qko0jWBPLgw
d12zwPljAnlw0fTParHblkTy4KJHjMHicy2J5KF+PuCbR/vmJPLg4lysW5XL
hyTy4OLBm4um3SZcJQ8ucnWe6NbsvEoeXFQsHjvbNOsqeXDhN/t8h7BTMnlw
EZL03CxwajJ5cHHha+q37b7J5MHFwwHTf9cXJ5MHF7ou/j1zBl0jDy6GBmfF
8RZdIw8u7EOr7F6cukYeXJz21fAWNF0jDy5GFZ3+t3DwdfLg4uTZYdwHTtfJ
g4tJHZm5M9KvkwcXXv9NXqj/+zp5cPHSNDxhpkUKeXDRee3wsLLgFPLgwr+T
YXr8oxTy4GL0u18p5cJU8tDF739ecKY6ppKHLtb08LL4mZJKHrpQ3NRMbvsv
lTx0IV19IXrIzDTy0MWJFZJFJ8LSyEMXAf0CukyoTyMPXbidlBT1NE4nD11Y
ny3I/u2aTh66qInS/aJ/J508dPGhuGHd4j4Z5KGLpu2LNBMWZpCH+v5ZO5q5
ZzPIQxd3zm4qD32XQR66yB75IF13fCZ56OIfU8Xec/szyUMXP465Dxxdlkke
utAL+zEtU+8GeejiONeq+3iHG+Shi4X6W03ik2+Qhy48Lo/I7dZxgzx0kZQe
eHzGjJvkoYuyJwZXtoTdJA9dXLRd3uFcf5M8dNH/WL9QS+Nb5KELq/Fbdv1y
vUUePKxZFPtgx+1b5MGDdfOz0uxeWeTBw5d7NyNKbLLIgwfnzxP3nTidRR48
zA8f0WDUnEUePPzwkRguG3mbPHgYHhidaeVxmzx4cNqpN60l+zZ58DDCr+ua
v3rfIQ8e5m7PqhbNu0MePGzufXBT8ok75MGDSdQiTt3TO+TBgzi1pnkuJ5s8
eEgeNLXW0ySbPHhw+LDYx9U2mzx4GPj7fZ9Ru7PJg4fjr/xjk89kkwcPU3zP
h33NziYPHva4fh7e0ZRNHjy8qj1Zmdcthzx4GJni0jZDlkMePLgPkQ8MsMgh
Dx7CjzgkH1qfQx483DrX2QN+OeTBg/mqHgOTL+aQhx4ObKwa/bgohzz0sFg0
9HL66xzy0MOp2NELZ/fOJQ89fDrnwQsbnEseehDv+frxsEUueeihi0vHs38c
cslDD+EbhvWJOJBLHnoYZW3nHxeTSx56+DFh98m12bnkoYeU0we9KupyyUMP
MVdmHm5pz1X82b6tephiMlOWxs0jDz3c4B65OXRcHnnoYW2EV4nl3DzyUI9X
d7JZf1MeeeihIsbq/FHfPPLQQ88jqck3YvLIQ73emba5/ll55KGHjz4fT3Z/
lEceeqhfqtdv6Oc88tDDbk1ua3vfu+Shh/N790xwk95VNP3x0MO9vW1VEZPu
koceNJfWFKxffJc89NB0thu/yekueehjvNeKd90P3SUPfaxpuGxXFXWXPPSx
YJdBuGX6XfLQh6qLZrnzvbvkoQ+XK+nWk1/cVYz746GPG+Mzl976eZc89LH4
4ivLZxr55KGP1PLXu9Pk+eShj4RntdYmE/PJQ/1943qPW22TTx764JoeOjNx
XT556OOqxqe+BbvyyUMfnL3dOnUE55OHPoS5tt2fxeaThz6uDeiX4JGeTx76
CDLcEHRblU8e+gi/FG2eWpdPHvoo6O/msfRjPnnoQ6nXUpzepYA89CH/p+f7
u1oF5KEPg+ebj/jICshDHxLf4Rva/y4gD30sf+M4RjKzgDz0IdYTXupqV0Ae
+lj05n5IxMYC8uCjgzcnsXlnAXnwUS1YU/jWv4A8+BiXlBJ38WQBefBxo3k5
X3ipgDz4EMyraLPJLCAPPjZE+HaBsoA8+JjX577u6wcF5MHHgKrIftYvCsiD
j0F601NcWgvIg49G5byXCzoXkgcfTWPm7vk6oJA8+LByibRZwi8kDz5OHR4/
aZdxIXnw8c3uqP4Kk0Ly4OOsoXN+z6mF5MFHwNN4HVfrQvLgo3STxpuYfwvJ
g49P/efpnVhXSB589Hp0Y+9810Ly4GN+9ND26j2F5MGHn88re4F/IXnw0bOX
176xRwvJg4//4i9MGRRdSB58OPWSbEu/VEgefJzekfDOOLWQPAzQ3u2+9/o7
heRhgEllNV23FRWShwGEtbkWlpWF5KG+X9zf4EttIXkY4Ovn2zabmgvJwwDH
DpmnXf9QSB4GmPl+A6fkeyF5GCDj51/j0jorycMAB73eN7j0UZKHAYz3/37a
haMkDwNURH/44qCvJA8DvF85/0WUWEkeBtgSmbMlcaiSPNTjlyjnho1VkocB
pli9sLA2VZKHAWYf9hjwbIqSPAzQ2D3H3nqWkjwMEMevfBU+T0keBjDNDXVI
WaIkDwNcfpzgm7hcSR4GmG53/Od+ByV5GOCcZL/TX5uV5GGABftXBeW5KsnD
AKHWjZ1G7lSShwHuXFu92cNbSR6GmOPZzSP6oJI8DDG1X3huXKCSPAxxOO34
u6BQJXkYYtbNmWGLTijJwxD1lyLm/Y5UkochfKYNz/aLVZKHIcxyV7p9jVeS
hyGGH7bsbp7IPAwhWJjbecd15mEIno91e3AG8zCEZND03QFZzMMQXULSNDfl
Mg9DVKfvMR9TyDwM8avT1DP1xczDEN5X3c84lzMPQ9zov6bobRXzMETpE1mU
5WPmYYg3XW9GHq9jHobYv+8XVI3MwxBrtyZ0aX7BPAyxyWKX3dvXzMMQnWd1
u/2khXmo90ujLjrlE/NQf//EY9t2fGEehvhhnhtv/IN5GGHq+p+X8n8xDyOs
v/C62bJTEXkY4fq7GQW5XYvIwwhLJ324KulZRB5G+PSjot+2PkXkYYTNwzQm
JfcvIg8jNH5qvVA7qIg8jHCw8XvcV04ReRgB+x9G/dYpIg8j3CrxffuNV0Qe
Rlh8bkbzU34ReRhhtHqC6UZF5GGEWPe9lt6iIvIwQlOW1voJ0iLyMMJQs1+H
n8mLyMMIE0JNNb2GFJGH+vn908z7DS8iDyPM3NGxI2BkEXkYQdpR+PPX6CLy
MILuKF/dleOKyMMIJuMv6GeYFJGHEd5fMLTuMqGIPIww/MGenwrTIvIwQrjp
x3XOE4vIwwijkic+OaYoIg8Bnl17fOzqZFpPdwFeBT9vuD21iHwE6vePMe05
02l9AwUI62sjvmHBvASQbQ85FTeT1ssTwO7f7mf9ZzM/AUwtg7autqT1iwUY
dLd++hhr5inA3x+8//02l/ZjhADR22vfXLMpovc1AaqHmQ1bu4D2Z7wAC5Ir
Fw1YxLwFqO+SH524mPZrigDKzjKFuS3zF6B3U3eHajvavznq9Rx2mWFvz86D
AG8+e+rWLKX9XCyA/+ypPW2Ws/MhwGvzd9NyVhT9//vrSgH6D0/rZLyKnRcB
glq+rvdbTfvtKECAoehy05oiej8XYMrb0tZxDrT/bgLM/5y+xXsdO08C3OKo
zPPXk4e3ABdHGF3oupGdLwH+KuuZZupIHv4CTCwZELV5Eztv6v2u7jgUsZk8
wgWY8anx5J0t7PwJcPvdwJ9PncjjjADfMgeXtW9l51GAfjkGZoNcyCNegM3C
vxwErux8CuD7vL/z0G3kcV2AB8JzXqPd2HkVIE1rYcqY7eSRJcB/4mejRrqz
86v+ec0OHbkHeRQKMPJxso/eDnaeBUi8GH6m907yuC/Ao1PR3m072flWn58D
JbNqdpFHrQAStwD927vJo1EAzY3lgyI9yaNZgJZmjRkee9j5F2BNgGW9tRd5
fBTg/Mm+H8XerAcBVO6rItq8yaNdgD7c9i85e1kfQsxaM1AYuI/1IUTPKPe/
5u9nfQjR+UqsJfcA60MIjaWx+x8dYH0IIUsa/OmYD+tDff9v/ySbg6wPIZTj
VA/7+rI+hLjdHLIv15f1IUSUq5ly+yHWhxBHtR5kD/ZjfQhh99LowCM/1ocQ
KR9DjQ/6sz6EiOCuVo4OYH0IMZm3z70mgPUhROD2GMv9gawPIV7a/bPS+DDr
Qwi+50Fl6WHWhxAm7YERW4NYH0L8HiJ4oxFMv39WCjFwW2NZcjDrQwixxrQV
c4+wPoTIqAm+2nKE/X4VwqL/82q/ENaHEGc6JryQhLI+hHCvW9d6O5T1IcSx
zWLtJWGsDyG+Xuu2/GMY60OIXvGHXviGsz7U97/lZBkeZX0IsWPzlx8pR1kf
Qqzjbbg66xjrQ4iF3ifbnh5jfQjh6x33ZNtx1ocQz97FbO99gvWhHm/s8drI
E/T36LoQnbr5CcZEsD6EmPN1x6KCCNaHECNHO4banWR9CNFVc8Wr9ydZH0LY
Vq/YtP8U60OIHpM9x+ieZn0IUWZdZpVwmvUhxLinntVTIlkfQsQuv/PkUST7
e6Bej2+ti9MZ1ocQE3uNvdYjivUhhPPM8QlnosjjoxBmkt0ef0ezPoTYfP7y
4PvRrA8hflaEVTieZX2IELJdEtAzhvUhwuwWl3XnYlgfIrT+urV7SizrQ4Rh
SY4NjbGsDxG+jdGJ33eO9SFC9d0DryXnWR8i/Iy8fkN5nvWhvv9N9egtF1gf
IkhUS9Zqx7E+RHC0aXa8HcfeD0Q4GLPefkM860OErT/6WelcZH2IIHxkviT/
IutDPf/hlaHbL7E+RJgWcFN7yGXWhwiF621/PL3M+hAhcZPtohNXWB8i7M2/
PX1+AutDhCeBzQ2DElkfIqz5O2Dy/UTWhwj1Gsq94UmsDxHWFvNv2V1lfYjQ
2N+5rySZ9SHCSYluwMdk1ocILclVi7KvsT5EmLmt1j/sOutDBK5+7dSNKawP
EfSG/TwzLZX1IULxj6eZojTWhwijL1+/1i2d9SHCzYWy+DfprA8RHhi7ZlZl
sD5EiLm2pkdeJutDhPXGtkmpN1gfIuysM6++cpP1IUKv5OyI+FusDxGOXG43
vJjF+hDBOeaeb+Jt1of6+e/Z3zLusD5EaNjWPUyZzfoQwWXMgT11OawP9Xzi
6p9+y2V9iGCk3FbHvcv6ECEFG89MzGd9iCC4d3nWhgLWhwgJSW19ThWyPkQw
M6nqValkfYhwYuv1LRoq1ocI9788WbeomPUhgus9D0FMCetDjLWeF/LbSlkf
YkwydvKxKmN9iKHzsjooqZz1IcYOea2GbgXrQwxv80OKQ5WsDzG08W5mp2rW
hxi/Dw1b4/2A9SGGbIBvbq9HrA8x9tvZnYx4zPoQY+SLYaKxNawPMSwOpYRU
17I+xHgrrBfurWd9iIEV1f1MGlgfYoRl9gtqa2R9iPExZHrTrWesDzHag05Y
BL9gfYjhp7+nw/El60OMX/oPp81/zfoQI6nqy/Lpb1kfYsR3jQud0sL6UI83
wlQ0+wPrQ4yOwUcWLv/E+hBDVazn5tXK+hDDreWj6vIX1ocYE4IqY55/Y32I
MX3KhFlD2lkfYrg/WjLI8xfrQ4wTinHmdf+xPsQouRw7aXZnFfUhxqGOFVaF
XVXUhxitjpySeT1U1IcY/2z7d9DbXirqQ73/A5+6hfVVUR9iHBy9yHb2ABX1
ofYKOc7jaKioDzGWZp3nvuWoqA8xfnjdSqvUUVEfYrgeWWZfylNRH+r5n1i9
9RFfRX2I4RvYY+kXIxX1IcZ5u7YgiVhFfYjR/ZOdm4NMRX2o9yfq+96bxirq
Q4yvlUONJcNV1If6+Qldm6JHqagPMZaMs5KNGaeiPsSYn5fg8uhvFfUhRr3y
vHm4qYr6EOPCjUSJg0JFfajPT5ZFqNVUFfUhgefI3rpWFirqQ4Lis+mT185W
UR8SuFosPhNuraI+JNjzWJFdO588tCTo/2XUxElLyIMnwcUvDomZ9uRhKMFU
66tXrVeSh1iCbxv3P+/kQB6DJSjtrf2+dCN5jJCg22gnt3Qn8hgrgSD2kOz2
NvIYL8HR1/bJTTvIY6IECz93U0m9yGOKBBunlw8+dIA8LCQY+GCZfx9/8pgj
wQHXm0kJweQxT/25bvsyl6PksViCw955K2xPkYe9BDPqQ3xWnyWPlRJsvZAQ
HRJHHg4SXD1Q4/88gTwcJTCO/yZcmkIeWyWY3Vt75q8b5OEmAdc18lVuDnns
lGDLApf3yUry8Jagx/IBVqoy8vCRQPtHXKf+D8nDX4IBvgu676onj2AJJocN
W6ndzPqQgPd4q1FdC+tDgqgJV+dVfmF9SJAZ9X7gjw7WhwQGT0o8rHsUUx8S
+DsnJz8cUEx9SNC493NzKLeY+pCg4HSnOfsExdSHBMOyQvXjjIupDwnW2VQe
7zK2mPqQoHJjUJ9jZsXUhwSy7ivzV5kXUx8SnDvyWrhxbjH1IUGvcz/2JtgV
Ux8SXGpVWo9YW0x9SGAWbPxfi1Mx9SHBT6esXu93FlMfEtxcMbxt5MFi6kOC
JTNWWqWGFFMfEpg2ZiZ6RRZTHxK8bp6dduRiMfUhgdNd/qA3qcXUhxR1pSuc
D+cWUx/qzwNvRuwuK6Y+pFiTvWd+Zm0x9SHFQPvPrtPfFFMfUkzfHV4j+l5M
fUjxyHnV9vk9SqgPKZYnC8wea5VQH1I8Njg/Kk1cQn1IMUQhXvNuTAn1IYW7
y85Wzykl1IcUs0QHe222KaE+pMjW3vrk5qoS6kOKhS+6JW5yLaE+pLh5vs+D
vQdKqA8pxj6KuN5xtIT6kOJTskdaU1wJ9SFFu8pj6dgbJdSHFGMsHpp8Limh
PqSwDohqEDaUUB9SmIYM6p3fWkJ9SLH3Qzen+p6l1IcUt+KWNm3ll1If6v28
7zTNa3Qp9SFF1wluh/pZlFIfUmzu3ClFf2kp9SFFw2bnp0mupdSH+vvqXE1K
/EupDynydD2+u8aUUh9SNPUz2XHpRin1IYVnz9FC18pS6kMKn2OKLffflVIf
UvhJuG3KHveoDykqnWrslwrvUR9STPyZvCHU7B71IYXbCdtWxyX3qA8ppgwr
eNOy7R71IcXusmxbfug96kMKDafA1T+T7lEfUrwdFDw9+N496kMK16bfi2tb
7lEfUgybcHLAy/5l1IcUmxIW/rg+ooz6kKLHTnG+xdwy6kOK6jnJZnEuZdSH
FN6po2c+PFpGfUhxdNWQ1trMMupDih/2M1Zn1ZdRH+r1mUZ+mtSlnPqQYuXA
mR9CtMupDynyHaud7YzLqQ+Z+n1ojs2pieXUhwwOdgN2L7Yppz5kCL8zryVk
XTn1IYNTSWy6pWc59SHDxclOnYLCyqkPGartD3ZedKmc+pBhqTi598WccupD
hvJu8PR/XE59yMD7FfOg41M59SFD4JLucT363qc+ZLC1fX8sXnKf+pBhtbLZ
4eWk+9SHDI054o8FtvepDxm2PTGRzna7T33IcKwqT9Mj5D71IcMafbOGeYn3
qQ8Z9o2PLq8tvk99qMfbYzHV4M196kOGfrLEFG7vCupDhoFas+6UD66gPmRQ
HXfgW86soD5k8FnU83zIxgrqQ4YNqRU2sYEV1IcMLj27TfZNqqA+ZNApW5sw
pbKC+pDh3OoFP558q6A+ZGi1Lrq00KCS+lDPJ89pc8bUSupDhkinXE5vx0rq
Q4bZZmNPWIZVUh8y7DVeahh4q5L6kGHoY7SpmiupDxlKZIFhgzSrqA8ZxOYt
MasnVVEfMjxscv6mcqyiPtReuZ+PWp6soj5k4GwJTPlcVEV9yBDtLr2V015F
fcgw+UWXWbnDqqkPGTZucBz9a3k19SHDzh52nu7h1dSHDM7FcDFTVVMfMlgt
rw2e3/kB9SFDDo8Xlj/hAfUhw9/OfTxOuT6gPmTQDf2yqz7xAfWhfv6nk9GJ
tw+oDxkm9QsbXGH8kPqQQeY+/fyxDQ+pDxmeRZ5q+XDpIfUhR8NL6wuvWh5S
H3L8PWZBXsCYR9SHHL38PP2fezyiPuSo2TD72H/Zj6gPOfo0FT960ecx9SGH
89vIMxcWPaY+5MjZxwm1PPeY+pCjuYvb7Zetj6kPOYwd14Xtm/6E+pBDa477
q6ERT6gPOZSjVJ0+v39CfcgR7P496Jl5DfUhx8TzGpkDz9ZQH3IkrinlH+yo
oT7kCNv9tnKRfS31IYfH6HyP0Kxa6kMO+3jNobOEddSHev59X4YH+9ZRH3Lg
3+YP2z7WUR9yRHbL6NPfvp76kGOGb6aVo6qe+pAjN74tP9b0KfUhR88P9sLi
pKfUhxztg68s38VpoD7kWJI42/bM3AbqQ47Kk9HPbYMbqA/1Z2MzVWZZA/Uh
x6qdhuNVGo3UhxwXVjzOP76wkfqQY+61lx4jTzVSH3KcFJoVnWlqpD7k8Gnr
c6F1aBP1Icd4/YqdZu5N1IccJRtixx2620R9yDH7Z4pFM+cZ9SFXny+zVIe1
z6gPOe69Oaahl/mM+pDj+RuVv8bA59SHHEsT//2wbN1z6kOOHZv2pmrlPqc+
5DBYdLeLudEL6kMOfkzXlB5eL6gPOYysPqx1bHxBfcjhJf/l6WfeTH2oz+OU
J2PdE5upDznMr2w/NZv3kvqQY29eSJKh70vqQ44kzzb73t9fUh9y+AZYB0k3
vaI+1B5W5eODnr2iPgbj/wDnREu3
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
kgcP15e5mHiPjyMPHsRliqsHC+LIg4dkp01rX4+KJw8eZjQPEq/MjScPHmwz
r00QjkwgDx7aqK+5v85NIA8ejoiG5a1QXCIPHhKkKP+04BJ58LDs0vwLLc9e
Ig8emvdOCYx8cYk8eFCf/OWf1i2RPHhwG/TfftdVieTBQ8Xy9AO+lxPJgwer
dy3GmH9LJA8eAvucG281NIk8eBg/hGeV6J9EHjxsKrxvH6tPIg8+LtfZfjI1
TSYPPux2nF5QNzWZPPg4cCYtkRuZTB58VLzS3UuoTyYPPg7PCzec6X6ZPPgI
2OPg+Nn7Mnnw0b98kvRIxmXy4MM3fsDT0NZXyIMPt4g4ywrnK+TBx6C7Oz1c
j1whDz6+OFS07/r0CnnwsZhV79Gvx1Xy4IPVbVfeRp+r5MHHpy6S6V+zr5IH
Hx+e1I6J7phCHny832KS7Ds9hTz4cLjPjVl/OoU8jM//NVZz+E0KefAxSx9j
e3vgNfLg41GzjWmWAdfIg493qfFJIWXXyIOPejfer2aiVPLgY37uM/9Ni1LJ
g4+T7X+pfySlkgcfcitXvc+vVPIQwCdh44Q3Y6+ThwD+C9MOTjtwnTwEWJF/
IzTh0XXyEMAx5KbsvfUN8hCge1wncNfdIA8BCq6MfyrKvkEeAizkl5n+7JBG
HgL4LvlYnjQtjTwE2PBqrnZgVBp5CDD/yrRNwa/TyEOAvfkv0qP7pWv/jG+V
AEsn2g7380snDwH6x/rP5BvSyUOAQYN3L1vKziAPAdq88Xzp6ZpBHgJI/Z/M
sjyTQR4CRE+XLAhqzCAPAQKs3ybs73uTPARI9zjUDptukocAneIypwTn3iQP
AY51Op1zrWUmeQjgfaalS5NlpvbxHw8B7Gxn+v92yCQPAZLTEt1KV2SShwDu
ldGW7vsyyUOI0QHn2TeTM8lDCEHy5FX3bmeShxA/EsMPX2vKJA8hTIZ+/DqF
n0UeQsgy01olDMrS9vnjIcTrtzbj8mZmkYcQt++fnBGxMYs8hAhbF3FXejyL
PIQQHqvbOj89izyE6Hknjj3rfhZ5CBH5Nnh+h59Z5CHEJ+3aKatE2eQhRPqI
0pqdg7PJQ4jFg10+THTJJg8hXAf3SCr2ySYPITbnnR7wPSKbPIToJhlypepy
NnkIMexA4EK3imzyEOLfxy2OHHubTR5C+L1+dWF7hxzyEGJ7F1FrgVUOeQih
G3hX6ToqhzyEuPYyeve4eTnkYZxH2I/KpxtzyEMIi7FWkV0P5ZCHCE8G/Twq
TM4hDxHUzcODU4pzyEOEIZLOA3415JCHCEmlTuvfNsslDxHYG+N7BwtzyUOE
rZ8TppX3ySUPEcbduFaXNSGXPETYsyXjjuvCXPIQ4Zf066SozbnkIcJZx91L
wyJyyUOE722047vH55KHCCtsxZZeebnkIcK9Od3tFtTmkocID7hdSk0+5pKH
CC3iU3uObZtHHiL41Xe8PkSSRx4iSAIOFD3ok0ceIrxtoazoNi6PPESw9fa3
s5yTRx4iiKolAeVeeeQhAqchqZvVrjzyECHg6LvrNsfyyEOE+Hl9MuoT8shD
hF52NoUOOXnkIUJDbcRGt6o88rBAesXt1V1f5JGHBT4/Tpsc/V8eeVhgd1Rf
Q1nHfPKwQNz8LwGXJPnkYYGMXf0Hj+yVTx4W4E5YErV7eD55WEDAer8uaHI+
eVhgxpA7vkMX5JOHBQYmR3ieX5NPHhbo8zVTUrQ9nzws8NukwulseD55WODF
tWfFg6PzycMCo0du9QhKzicPC5xpMeHd/ux88jDuZ+bT/jPK88nDAhocYt97
mE8eFrgYOnCG4E0+eVgg1frpQ+6PfPKwQN+6wi232urIwwIr2e1ZE7k68rCA
t7XXqhCljjwswC6Y7b2nl448LLAtNuA/x6E68rDAnpkV9yvH6cjDAo/8BzaJ
punIQ4za92Fy6/k68hDjo/2aQb9X6MhDjKujOvKPbNCRhxjhqS0P/QjQkYcY
z9657tXs05GHGNuyxt0VHtORhxinO8sn3I3RkYcYjSV9bs5P1JGHGG28U1um
3tCRhxhltxI/3c3TkYcY/jMqZxtKdeQhxtFDqzi77ujIQ4w5vRY8N3uiIw8x
Kt/9OOP5WkceYuT1fCU48VlHHmIUe9iwIn/pyEOM9Ia2/65sXUAeYsy9+CqW
bVpAHmKMmeJxJ5hXQB5iuHGtomukBeQhxmTdo6LvlgXkIcYGPdgfexaQhxgx
zd/2yR5QQB5iPL+wsdEDBeQhhkfr2V8aRheQhwS8xset4FRAHhKEq3ve8pxa
QB4SfNo3sMvmWQXkYfx9i/QV7gsKyEOC/AdDjlouLSAPCc7MajaiwLOAPCTY
7NfedJRPAXlI4HRcFHticwF5SDB8V8LVmu0F5CFB7YSvNe+CCshDgtE+TxKf
7y0gDwkMNZxHmREF5CGBaenr3+uPFZCHBO9bb7lgFlVAHhIExB3fsO9sAXkY
99u8qvn7iwXkIcH5BV7VvZMYDwmOXtga6JLCeEjg3VB61j2N8ZBgsOfHjH+z
GA8J+k1wmGGdz3hIUF/T4vczA+MhQcVNQb/AUsZDAnbv+dtYtxgP435nB7n7
1zAeUkQKRHNqa+l+WkrxX/HO1xZ1jI8UFwNVgWPq6f46SxE6YXC86wvGSwrX
Dc0rXRrpfvlSFC6JWzbiPeMnRc9ey9+Yf6b7V0gxfu06/e2vjKdxvbUdlvv9
oHn0kCJFsMmea6Knz2vGx1v1yjrSQv93PgOkmBUSZ9++tZ68pWi4emTo4nb6
v/MaLkXxT0OnKx315C/FQ80w4VtT/d/5jZdC2tgvn2ump/MgRds9ilU2XP3f
eU6TosOy7HX9BHo6H1JsucYf1N1C//fz6zwp1JytLDOpns6LFK9Hn3N5Jdf/
nfdSKWSvji9JVunp87kUtyRVh5ZZ6v/O31uK79peg7jWejpPxv2ENo9K7q7/
6+EnxYLn5vLhPfV0vqSI9bjRLsdW/9cjSIomdm5sv756Om9SvF8T5nS8v/6v
R7gUGX1Fo5oG6un8SdEn8f3tkXb6vx6RUtzwHemwY6iezqMU7CeNr29A/9fj
nBQuC7ybPRuup/MpxXkut+SfUeSRbPQ1NUTwRpPHNSlWX7aPlI0lj3Tjz806
qqUO5JEtRXrxkhVmE8hDJ8WaL1uv/nIkjyIpOvo72j10Jo9yKT5ev2h3dRJ5
VEuxo/ucj/5TyKNWisEXzY6OmUoedVKc7Ldi+T/TyeOZFBY1/5xOmUEer6Rw
XrfSy20mebwzrh8xhtNyFnl8lqJHmz4ZJ2aTx3cphoQ8jbKdSx4mMvh5yZrS
55FHSxnqOxc1DptPHu1kOI36axkLyKOzDGvLwwL7LCQPMxkcqpV7Ty8iD75x
vR+CH+0Xk4dYhsoMqx/Ll5CHQgbTE9oM/VLysJQhZ3jQSsly8ughw6edvnYr
VzB9yCAMLnFOXcn0IUPIid3VP1cxfcgQMYj1n91qpg8ZhpWz69d6MX3IsPJ8
VMaFNUwfMnw83uvSPW+mDxk8qw7XtVrH9CHD3dWSDd19mD5kUFmvPem0Xv/3
/WeeDBZP8jYs38D0IcM/vRN67PRl+pCheb1T3bGNenp/lSFj0eiU+E1MHzJs
6HfjVtpmpg8ZRP1nztJtYfow3m+nhWtK/Jg+ZJAvjrOr2Mr0YZw3jtRUbGP6
kCG4U68lZf5MH0avZubswu1MHzJkyvZ9yg5g+pBhkWeYzbUdTB9Gn5ZXn8bu
ZPqQoQ9vTJ+ju5g+ZBhiOnZoYKD+79+jZBkm7vKUewcxfchw3KGfyZxgpg8Z
LjgWfbHfzfQhQ0JUN1X3PUwfMnydz4vtEsL0YZxXtCj6UwjThwyTnSJ6VYUy
fRg9Ol9ddXUv04fx+dbbtxzYRx51MsS5PfX1CmP6MN5f3mF/5/1MHzJcDx13
uVs4ebyTYfdPf+s2B5g+ZOBJM1o9OcD0YZx/0pz56RFMH3LoXmXNPniQ6UOO
/Kl9zD0PMX3IcSfK5Oy4w0wfckz3XdFDeYTpQw6n2Tr9zyNMH3JM9naJqD7K
9CFH1Sq/xMRjTB9ydF94YsDu40wfcry41GPsokimDzl+VV83GXGCPHobf7/2
xUbJSaYPOR5Yb7r34yTTh3H/QTMG3TvF9CFHT/OdKdejmD7kGDK0v+fR00wf
crgsLAjYFM30Icf393r2vDNMH3JIZ5gMso9h+pCDP2oxt/tZpg85cq9oCznn
mD7kmNvTxNvkPNOHHHeblvVpPM/0IUeyU5hVbSzThxx79YY1xReYPuSYFZnT
L+si04ccnuyte1PimD7ksH3tdvpSPNOHHM1eWO67mMD0IcetyU2+Fy4xfcjR
5+jMHXGJTB9y9PvhXJmUxPQhRxu7UTtuJDN9yJHuaZGju8z0IcfjR4Piq68w
fchxuX7LsldXmT7kWPhxiqLFNaYPORzPxH0VpzJ9yLH7SUe29jrThxzfhKGH
599g+jB6htYn705j+pAjIcU96Ho604ccS9Pa2jdmMH0Yn99mnakqk+lDjsIP
Lczcspg+5Jjhm+4bnc30IUcH6+Ver3OYPuRY0OqEZlAe04ccFpFn8/bkM33I
4TA41rdBx/Qhh8byhM9oPdOHAsvMXV7HGZg+FNBG720tLGL6UGC5Sd1/IcVM
HwqYJNT817aU6UOBHyv+G7S7jOlDgXnDDY2cCqYPBcYdNow9W8n0oQBO7QnA
baYPBS6lptTUVTF9KHCsU5uNwTVMHwpEuMw9P+Qu04cC/PKio1/vMX0oMNZ2
d2jafaYP4+u35WUHPmT6UOC+effVc+uYPhTY1FD5EE+YPhQIO7x4vHU904cC
/uXnvksamD4UMHuY1EPygulDga1m/B5Wr5g+FGh0fqYd2sj0oYDjzXMXZ79l
+lDAt9A3I+g904cC0x1ZWdkfmT4UUH3MbNb6C9OHAo+qdpVO+8r0ocCu+XLf
K9+ZPhRI9WgzTfqT6UOBSV7+KYd+M30osN79ygdxcwP1ocAv5zNzk/8xUB8K
JBxwmDm1tYH6UIAzKnJom3YG6kOBn8XHPfQdDNSHAi/ezRt4pLOB+lCg9rea
7csyUB8KsJbOdFnGMVAfCuQdi/NewTNQHwrUqAQlW4UG6kOBmCHfS2LEBupD
gQ8RrGf3ZQbqw+i7O8pfozJQHwrcifYSbLc0UB/G11/3QvLJ2kB9KDDxZZcO
PjYG6kOBNmVXZpj2NlAfCmx7s3hHej8D9aGAi/tJlt8gA/WhQPLm61unDzVQ
HwoMeylwGT3cQH0oEeo+QDXB3kB9KLHk1qWVS8YZqA8lFEWu+hOOBupDiZDw
+XmNkwzUhxJfTzl9nzKNPPhKnAhSNK+aSR5iJXx8V27wnEseCiWe9lj0j6U7
eVgq0eTxdeT3xeTRQ4ljP+qePl9BHr2N67sW7v3kRR4DlKjPcP1msZ48hiiR
WDyt0n0zeQxXwrfpUnWRP3mMVmLVlPM5kwPJY7wSHt1fTP8vhDwmKrFZdXRW
bjh5TFOia/tdxxKOkIerEren9K5PP0ke85Q4NeFr+3cx5LFQiYNfNC/t48hj
qRLiU5rZOcnksUqJOaP3Oiy8Th7eSqw563i0ZxZ5bFAa///OHawoIA8/Jbpt
fS7VlpJHgNFjwrKRAVXkEaTEtn9rz3y5Tx6hSqwuzRsXXk8e4Uq8W3dv6JxG
pg/j60cIw6d/ZvpQgvfui9vWn0wfSrASfQx3WxZSH0qsdV75zr1TIfWhhG5d
RDMlt5D6UML+Y1Yvc2kh9aFETVLbtCFWhdSHEiMff3l81LaQ+lDitDTpXS+7
QupDiSEPbPs3sy+kPoz7fb7StL1zIfWhhKXNvgfOLoXUhxJ7s+Qdbi0opD6U
mC8a2yFiZSH1oURy5heXQxsKqQ8lXDWKTbUBhdSHEn3MWzRbsK+Q+jCev3nD
N/c8Xkh9KHFVpY0Ycb6Q+lDim6/9p8grhdSHCtZZFRNGZhdSHyrIlhe69S0t
pD5U+Lk7/6dXbSH1ocKJFw6fmr0spD5UuPyMr6lrKqQ+VPiuWraN3aqI+lBB
9GPEryNmRdSHCmdzkiLXK4qoDxUOCdVrEm2LqA8VLkiuHh05vIj6UMHhnLe2
76Qi6kOFIadyIwLciqgPFeoCop/19yqiPlSYxu68zXF7EfWhQrXWyVB4oIj6
UMEk0NUm6WwR9aHCsfMDev5zvYj6UKGr3mlmblER9aGCe/97jp8fFlEfKrzJ
t089/LGI+lDhx91DMy63LqY+VCgffP/3aFEx9aHCe13Ynmm9iqkPFSrNRV/q
7YupDxXWKHtrv7gWUx8qo//crcFexdSHCsmuXs/PBRVTHyok6ptfnhhVTH2o
UBr8sn/g9WLqQwXp5PLaSZXF1Idxv4MuSZNeF1MfKtgunX0wtlUJ9aFCYLj0
lVZWQn2okOFud9/broT6UOGSYK+98/QS6kMFy1E9eJVrSqgPFfDh58zmYSXU
hwo6xzl9HyeUUB8q+L67Vbe2pIT6UCHteWJqbmMJ9aGCo76oZ1nHUupDBU1O
/+rjPUqpDxW47X7NsHUupT5UGHz+mX/Y6lLqQ4W4z3ZDcw6UUh8qLCyN3KdP
LaU+VFj8qCwm9kEp9WG8351FT/o2L6M+VHC+UGoTyCmjPlTYciL210SrMupD
jTec1Vb7h5RRH2okz9l31GlSGfWhRg/dmMlBi8qoDzXeJtm42W8qoz7UcE6+
3rhjfxn1oYbp8Twbp9gy6kONb7dl66KyyqgPNTK/Wlpuv1NGfahR0zQ5vel9
GfWhRtvnVTqT9uXUhxqbjw97F6Uspz7U4I9RNdUNLac+1Ii0u3kla0Y59aHG
aNF5sb13OfWhRmJwyFCvfeXUhxqChOd2E+LLqQ81Uk7ddK0pLKc+1GiUrf7J
e1lOfahhEu9/lN22gvpQw93Js7zIsoL6UMNr6p7pY8dWUB/GeYx93DZkSQX1
ocZNR4uHJ3ZXUB9qLJrl99E/oYL6UCNrc+12bWUF9aHGNe/wT9VNFdSHGtHi
cwWTLCqpDzXYdQUXr4yopD7UCNq7zqvV0krqQ43XFt24DvsrqQ81lm/eeSMw
rZL6UGNZn73xBc8qqQ81Dj//trgT6xb1ocahQJ/weUNvUR9qpC6TtNAvvUV9
qI3nvei6w5Fb1IfxPFiefv9Of4v6UGOsPMQ08/st6kONU841lzO73aY+1Gil
K078Puc29aFGz9oVrLXht6kPNSobbIWDDbepD+P+Su45TGpWRX2osVQ4c17u
wCrqw3h+luunHfGqoj7UeNbFc9n9+CrqQ42yY68lB19VUR9qTPR1GVBuVU19
qDFsQUzOgcXV1Icanlde8N/GVlMfGlzTP3nY0FhNfWjQeXFw22DbGupDg/Kt
12uf+NRQHxr8WvL548/MGupDg+XNnYbVt7tDfWjQs+3SLjFT71AfGgQNPNlp
QvQd6kODxlODRzZ8vEN9aHDk5TPZtlF3qQ8Nvg7rvcX68F3qQ4MJeeNOvH9z
l/rQIHq6oc8T+3vUhwZrvuW5dz51j/rQYFr6t9KAn/eoDw1a66z2THWtpT40
2H02uX9Yei31YdzPzclvx8ruUx/Gx7vLZofuvE99aGBIyE1f8+4+9aFBf9aL
2g6uD6gP47x+vlUuNTygPjS40aXhxOnBD6kPDSyO5f0yJDykPjTwO/XdyZf9
iPrQYLoZxyHS+RH1oUGH9brqGaGPqA8NdqZHZ6SWPqI+NEBMfHdDlzrqQ4Op
J3zSDv5bR31ocL3NllU2R+uoDw1qTK9mRT6uoz40OLV08omP1o+pDw3SParW
2K17TH1ooOg+yWZX7mPqQ4OO5r+GP2M/oT40WLnfNHGh+xPqQwMW70VHQeoT
6kMDfceQnV06P6U+NLhqsf317EVPqQ8N7q77J9ks+yn1YfTof8jEXlJPfWjw
baUkqdWWeurDOJ/GcQuW1tVTHxqYDt27MdD+GfWhQVzXk7br4p9RHxp4L/Q4
4sBvoD40aPf6fLx4ZwP1ocFhbQ/Xtl8bqA8Ngg/E7FEte059GM+3DgNCnjyn
PizxP4AhO2c=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw11nlczNsfx3G7ZG+mZmpaZh+KKFxZuvO2pxLZQ5LEla7SIolKJFskRVG0
cEWpJBTt+7RplexR0YLsS+I3P33m+0c95jHfzvec8zyvaXgbnZba9+vTp89b
+Y///97NHDVFo3V+tnJDrLOxsgrOmcTO8mPPy2YmLmjazVTBWevhXwoXzcnW
8e+wTNNWQZEuP/Oy/6zssetO5H0eo4JNJrZFdT7S7El/LhXknx+rGfNtRrbx
nwHl76elOPztbpRtIh8tcYEKvrtXTTb4PDl7aZq2fEQV1KwO3tdvl0H2n+HW
qWBgwK1w9x962Zv/XCrYulHQVagkyt7xZ0AVPGyL7Bg1WTPb688EVRC85FY0
bg7L/jM9fxVMiZF5ajnmZP0Z7oQKTjoFHBx6WVl6Nvz/lwrcRi2q7dDjSC86
/39AFaS3fjhdt18o/bPcRBX4vEWLqZue9M/00lSw7+u63fzJBtL8/w+Xp4JX
p5NPrUqeLK0o//+lgsZ5U3RmTDCS/tm+BhVUnM++O+f6DOmf5Tap4Nqv78tf
/yWVdv5/eh0qqD31k71kwyzpl/8P91kF7m0t+3ZI5kj7/LkY2Dqn/27m+7nS
Xg8Gbo35z8o9c76014OBRQM68quOmUh7PRiYtvXnNTsbU2mvBwMFvis3b5ti
Lu31YOAIZ2iEaKSFtNeDgfr3gzZXdS6W9nowYDlxnGjFqyXSXg8GXNUz+J4P
LaW9Hgwcti99/fHeUmmvBwMmfbt2thQvk/Z6MLBfs0tle95yaa8HA3rWG80T
s1dIez0Y8O5n06c4e6W014MBzodx1o15q8iDAevv71sGyVaTBwMSqf3OHTVW
5MFA6dAD82c8W0MeDDzuMXl78N1a8pA//6r9Vo/+1uTBgGPxL42JnPXkwYDf
E4fqur9syIMBs9zvzXP1NpAHA52B5g+nZW4gDwbmBXc+WmtpSx5MMJ1m3Ml8
ZUseTGRNjj3g4ruRPJjYPHLv0UCOHXkwYaz83ZafbkceTOQ1DHo+12oTeTBR
7iUVDvm5Sfr3nwGZcGy4F7o/2p48mDj/wq61ZOFm8mBC4qvCfPtpM3kwUV28
cJtS7BbyYCI79O6h8cv/IQ8mBHNN17oqbSUPJhzMP4u6sreSBxOX4gr33dnt
QB5M9E1Pt2kz2kYeTFx1SFYO+bGNPJiY88+ysTXZjuTBxNlfv7PvHvqXPJg4
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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw11nVYk20bx3G7ER3NYKyHYoHx+Ci4n9jdShiAAnaCPmAhiiAGUiqh2CAo
IqCE0rWNLkFFRbHFxATFd6/Hed1/wLFj49p9XZ/zOyZw2jTfuVOHDh3eq3/8
//dh8x9SjVEB8l51FzZb9eJA5q0rWtv1uFw7fsoTT20O/D7XjnXbclxu4vN2
XiqPg1kPnjcPenxcPmBpQO5XUw6mKdrGRc4OlA//e3HQFmw9XJUVKLf6uyAH
Fmb/5GZaBMmnqleLn8KBdcr2+/uig+TzU3nqFTlw7rtnBZcXLP+73FIO1s6w
Mw0+ESx3+XtxMG779PaP/ULkW/4uyMGhAfMjLI+GyHf+vUEO4swyYnb3DpX/
vT0fDs62BGfcPhwq/7tcAAelRh2XtWuckIeH/f/iYHh19JeZQSfkFzf/f0EO
8qa+vR+vf1L+d7vxHNjOkc0yO3dS/vf2Ujk4PPr+BqXZKXne/5fL5eCVabb1
8dRT8tKS/18c7NdpTDw4JUz+9/jqONga538gqT5M/ne7Tziw2TjD3nh9uLz5
/7f3loPmlSU3VR0j5N/+v9xXDrrfuPo2JyxC3uHvpYW60OlmPUdEkocWDk/a
t+NyRSR5aGGuyP5S1KbT5KGFBT9TbVv7nSEPLXwuf9/tTvIZ8tBCqPaSN6/t
oshDC1fWvD+Q3/EseWjB6VWm/pwlZ8lDCz43nH7oxp8lDy0M2smfyet2jjy0
4Bu5g+u64hx5aGHn7toZLWnnyEMLd9dPi8rXOU8e6vfb8k9Sw9bz5KGFLsm9
/lhWnicPLfAEr6peDLtAHlqo/+K4+EHgBfLQgvGDQb7cLxfIQwtPHev+iVly
kTy0cNnzQF/vOxfJQwtjq67svyK8RB5asFBWNfL8L5GHFrIfr5Y//XyJPLRw
bK23b8vSy+ShhYb1qRvnKy6ThzZst3fZ0T4imjy0EbQm+t2389HkoY0iTcM3
Yzgx5KGN/qt6zFJ6x5CHNrZ42WSd/RJDHtqI1xt3I8v1inzc3wW1sXO1va24
4Qp5aONx6Mekknmx5KENr1mG3rcUseShjYMX+dMeI448tPFRs27exPQ48tBG
7ZK+MU9HXCUPbXR2MjBMSbhKHtq4EOM8OnPwNfLQBmeQ6aIvcdfIQxv3Lpoc
WGQWTx7a2HZzffjDuHjy0MbIEq8hfoOvk4c2xjmIT81NuE4e2igJnP5D3zCB
PLQRuGz5oeClCeShDedx2bNCoxLIQxs/5uu4c5sSyEMbz29t7yeS3SAPbSwS
ZnOurLtBHjrIyn47NzbhBnnowH3RTm/RtxvkoYPTd96P72+ZSB46eFk8RWOz
dyJ56ODt0YjJlspE8tDBf0UJI7b2SyIPHfy+Gte5r00Seejgw/nCgt5nk8hD
B2vv6bm5vkoiDx1sPLTyg5F5MnnoYM2x1g6mnsnkoV6/zyX7A3nJ5KGDW6pT
kYM1bpKHDhweeM40WXKTPHSwXbK+ceG5m+Shg86L+beVb2+Shw6OpLYP9hh1
izx0UL92pufyfbfIQwfdbFdUuZXcIg8d7HC+Z5eil0IeOhhg8NZMsDKFPHRw
1fz0/GvxKeShvh87ftXi1hTy0ME/dsJL+pNTyUMHR3/Ist4FppKHLgrq3mhU
PkwlD10o96Z7ZgxIIw9dbK14/Paaexp56OKuZqfJp3PSyEMXHZRHNhzUSCcP
XQRc1Zm6yjadPHTRdiknw/xSOnnoYohtTPrrj+nkoYuTliOH+VreJg9diH19
dLv63SYPXSwflLthefVt8tCFXOwuP8a7Qx66WGx9LypgzR3y0MXzp6Lry5Lv
yI//9dBF+Z2i8Jb2O+ShC81BCWdmTssgD13UzHXrtio4gzx00c9l35CRDzPI
Qxd7b4/1uS3NlP9dLle93yKdI583ZZKHLr6rIutrUzPJQxeRpzx1HDtmkYf6
79vXdT4+LYs8dHFnj5nn8sAs8tBF0Kc5axT1WeShh5+OAc3PNLPJQw+TCmPc
hw7PJg89KJa9fDd+cTZ56OFieKyXoUc2eejhmo2Ga0pENnnowdZxyCvdzGzy
0IOp5VbbfxqzyUMPa6dk8vQ65ZCHHmZzr8Umi3LIQw/FVnf29J2UQx566Gyx
zUzkkkMeenBq2T/308Ec8tBDj4/PIndE55CHHgZFPCtLLsohDz18SByVHP0y
hzz04GzXNmBO91zy0MOMgdlGsdJc8tBD3YqdfimTcslDDxXz9/23fVUueegh
fIVb9xfeueShB77b0BVdz+WShx56bolLrc7MJQ/1/QQ9tp/bkEseeojWOh3l
+TOXPNT7m+7yep5uHnnoY7bz+Gu1FnnkoY/fer4bus7JIw99ONtfS29cm0ce
+tA60ne468E88tCHj/4171Pn8shDHxa/W5zc7uSRhz4OTXULb72bRx76WPkk
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

         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-0.0011072490078471188`, 0.5063530063939918}, {0, 12.}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"pKa=7.6\"", TraditionalForm], 
     PlotRange -> {{-0.0011072490078471188`, 0.5063530063939918}, {0, 12.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Exp\"", "\"Electrostatic Model\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.845720888639374*^9, 3.8457209079922113`*^9}, 
   3.8457209532030582`*^9, 3.845720997561615*^9},
 CellLabel->
  "Out[1545]=",ExpressionUUID->"ddc5ca5d-8270-45f1-8a30-584c879d0689"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8456459555832872`*^9, 
  3.845645999922738*^9},ExpressionUUID->"6a68d0ba-b654-4519-8684-\
3b79a8cfa9e0"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1183, 909},
WindowMargins->{{Automatic, 109}, {0, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 173, 3, 55, "Subsection",ExpressionUUID->"8545c6b9-be0f-435d-af42-135e8337f437"],
Cell[CellGroupData[{
Cell[778, 29, 1580, 42, 193, "Input",ExpressionUUID->"c05c230a-354f-460a-9581-1b111986a966"],
Cell[2361, 73, 4732, 143, 274, "Output",ExpressionUUID->"89f9d2c3-8d12-4bf6-bcf4-c78e6ef0d172"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7130, 221, 830, 23, 62, "Input",ExpressionUUID->"50a3bf3d-cb1d-4b8b-a7e5-dc5141fe2ebf"],
Cell[7963, 246, 924, 30, 57, "Output",ExpressionUUID->"e0f76f31-11cd-49dc-9aec-9313d826d061"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8924, 281, 4881, 135, 432, "Input",ExpressionUUID->"32798290-18a0-4ca2-8c83-ae5c6801441f"],
Cell[13808, 418, 23758, 451, 268, "Output",ExpressionUUID->"f43f7da9-ed96-4e01-b748-8fb1db51bedd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37615, 875, 158, 3, 55, "Subsection",ExpressionUUID->"7be4440e-a3d7-4ed4-b44c-4227fd261718"],
Cell[CellGroupData[{
Cell[37798, 882, 1531, 42, 193, "Input",ExpressionUUID->"5878d3b5-e21b-481a-97e7-ef13a5b77d75"],
Cell[39332, 926, 5643, 162, 299, "Output",ExpressionUUID->"03b0fcdf-4b1b-4edf-8e4f-e322c40c81ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45012, 1093, 1510, 41, 95, InheritFromParent,ExpressionUUID->"316f3fcf-93b4-4b4b-b604-0896c6a4b7ca"],
Cell[46525, 1136, 1059, 32, 66, "Output",ExpressionUUID->"3864e2b6-e3e8-4977-8ae4-0f5d8ddd2445"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47621, 1173, 5009, 137, 467, "Input",ExpressionUUID->"4cae8f8a-8c01-494c-849d-d7e1cc98ffbf"],
Cell[52633, 1312, 235, 4, 35, "Output",ExpressionUUID->"23def10a-718c-49a2-a918-bbf3305f6ce6"],
Cell[52871, 1318, 23600, 450, 268, "Output",ExpressionUUID->"36c57d0d-c587-454f-a3cb-1291ed522c00"]
}, Open  ]],
Cell[76486, 1771, 128, 3, 31, "Input",ExpressionUUID->"fa3cc69f-641c-4b9c-8027-62c8a66f9f74"],
Cell[CellGroupData[{
Cell[76639, 1778, 2633, 59, 193, "Input",ExpressionUUID->"2fd99eca-34fe-45bd-b9d5-b7ea4817e6c9"],
Cell[79275, 1839, 3542, 90, 179, "Output",ExpressionUUID->"456f427d-9860-45e2-ad40-1493912c0eab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82854, 1934, 223, 5, 45, "Subsubsection",ExpressionUUID->"68ad4da9-1674-4d3e-b2dd-72509bc75685"],
Cell[CellGroupData[{
Cell[83102, 1943, 2465, 54, 92, "Input",ExpressionUUID->"d51ae4fc-d3b2-4a87-8b1d-dbb8a21757b6"],
Cell[85570, 1999, 619, 10, 35, "Output",ExpressionUUID->"75649649-e805-4c14-b70e-8ce83c738113"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86238, 2015, 226, 5, 45, "Subsubsection",ExpressionUUID->"43bce6a9-04d7-4fbb-b923-1b7d04fe0225"],
Cell[CellGroupData[{
Cell[86489, 2024, 1921, 46, 120, "Input",ExpressionUUID->"1ca44dd9-adf3-4272-b48d-1014e6773201"],
Cell[88413, 2072, 1842, 48, 114, "Output",ExpressionUUID->"f7745155-f857-4353-9b7b-235ee2576768"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90292, 2125, 9652, 272, 706, "Input",ExpressionUUID->"2bf14628-754c-4b39-8701-bf54c4852773"],
Cell[99947, 2399, 55373, 927, 266, "Output",ExpressionUUID->"e554ceaa-707e-46a3-88c7-11d09b31b8fe"],
Cell[155323, 3328, 235, 4, 35, "Output",ExpressionUUID->"90e50f3e-9e28-4d46-9c05-405e8dfb1e22"],
Cell[155561, 3334, 77804, 1381, 301, "Output",ExpressionUUID->"ddc5ca5d-8270-45f1-8a30-584c879d0689"]
}, Open  ]],
Cell[233380, 4718, 152, 3, 31, "Input",ExpressionUUID->"6a68d0ba-b654-4519-8684-3b79a8cfa9e0"]
}, Open  ]]
}, Open  ]]
}
]
*)

